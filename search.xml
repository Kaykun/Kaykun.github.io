<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Selenium</title>
    <url>/2020/03/03/Selenium/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><p>首先我们在入门上手Selenium前先了解下自动化测试。</p><blockquote><p>自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。通常，在设计了<a href="https://baike.baidu.com/item/测试用例" target="_blank" rel="noopener external nofollow noreferrer">测试用例</a>并通过评审之后，由测试人员根据测试用例中描述的规程一步步执行测试，得到实际结果与期望结果的比较。在此过程中，为了节省人力、时间或硬件资源，提高测试效率，便引入了<a href="https://baike.baidu.com/item/自动化测试" target="_blank" rel="noopener external nofollow noreferrer">自动化测试</a>的概念。</p></blockquote><a id="more"></a><p>昨天逛GitHub看到一个<a href="https://github.com/Jack-Cherish/python-spider" target="_blank" rel="noopener external nofollow noreferrer">Python爬虫的项目</a>使用Selenium和BeautifulSoup爬取百度文库，再看到Selenium，看了这词半天才反应过来，它也算是曾入职后正式接触过的第一个项技术，不过到现在用进废退了ε=(´ο｀*)))，所以回忆下。Selenium通俗点讲就是可以模拟人为上网的(鼠标点击、键盘输入，表单提交等）动作，目前支持多数浏览器Firefox、Chrome、IE等，可用于回归测试中检验软件功能及用户需求。Selenium支持多种语言，但是最易上手的还是Python，所以学习它之前必须要有一定的Python基础语法和HTML/CSS，起码你按F12后能看得懂网页源码找得到需要操作的相应元素。</p><blockquote><p>第一步 学会在IDEA中安装Selenium</p></blockquote><p><strong>1</strong>、<strong>File</strong>-<strong>Setting</strong>-<strong>Plugin</strong>-<strong>Python</strong> 首先按照如下步骤先在IDEA中安装好Python环境<br>现在Python3.X会一并下载<strong>pip</strong>，接下来打开<strong>Terminal</strong> 使用命令 <strong>pip install Selenium</strong>，<br>安装相应版本: <strong>pip install selenium==3.6.0</strong> 查看Selenium版本: <strong>pip show Selenium</strong></p><img src="/2020/03/03/Selenium/Python.png" title="python.org"><p>安装好Python后我们新建一个项目添加一个<strong>.py</strong>的文件试试打印一下是否安装成功</p><img src="/2020/03/03/Selenium/Hello.png" title="Hello World"><p>接下来在本地系统里也安装好Python环境</p><p><strong>2</strong>、安装好Selenium后它还是无法调用本地浏览器的，因为我们浏览器有缓存并且可能装有各种插件，我们还需要安装相应浏览器的驱动，可以前去<strong><a href="https://selenium-python.readthedocs.io/index.html" target="_blank" rel="noopener external nofollow noreferrer">Selenium官网</a></strong> 根据浏览器版本下载相对应的驱动，并附上浏览器驱动下载地址，大家可以自行前去挑选 <strong><a href="https://npm.taobao.org/mirrors/chromedriver" target="_blank" rel="noopener external nofollow noreferrer">Selenium ChromeDriver </a></strong>、<strong><a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener external nofollow noreferrer">Firefox Geckodriver</a></strong>,至于装什么驱动，取决于你自己，为了更好的兼容性可以参考下网上版本映射表。下载好驱动后我们放在哪儿呢，怎么调用它知道它到底有没有用呢？最简单的是将Driver放在Python的根目录下，或者放在浏览器的同级目录。</p><blockquote><p>第二步 了解Selenium的基本用法</p></blockquote><p>要使用它先引用它，前面我们说过它支持很多浏览器，这条命令就是调用相应浏览器，可以看到支持的列表</p><img src="/2020/03/03/Selenium/Browser.jpg" title="Browser"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver <span class="comment">#导入库</span></span><br><span class="line">browser=webdriver.Chrome() <span class="comment">#声明要是用的浏览器 </span></span><br><span class="line"><span class="comment">#browser=webdriver.Firefox() 注意首字母大写</span></span><br><span class="line">url=<span class="string">"http://www.baidu.com"</span> <span class="comment">#填写你要测试的网站地址</span></span><br><span class="line">browser.get(url) <span class="comment">#打开你预设的网址</span></span><br><span class="line">print(browser.page_source) <span class="comment">#打印网页源代码</span></span><br><span class="line">browser.close() <span class="comment">#关闭浏览器</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#Selenium基本用法</span></span><br><span class="line"></span><br><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.action_chains import ActionChains  #鼠标操作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get("http://www.baidu.com")</span><br><span class="line"></span><br><span class="line"><span class="section">#打印页面title</span></span><br><span class="line">print(driver.title)</span><br><span class="line"></span><br><span class="line"><span class="section">#浏览器最大化</span></span><br><span class="line">driver.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="section">#设置浏览区宽高</span></span><br><span class="line">driver.set<span class="emphasis">_window_</span>size(480, 800)</span><br><span class="line"></span><br><span class="line"><span class="section">#浏览器前进后退</span></span><br><span class="line">driver.back()</span><br><span class="line">driver.forward()</span><br><span class="line"></span><br><span class="line"><span class="section">#也可定位登陆按钮，通过 enter（回车）代替 click()</span></span><br><span class="line">driver.find<span class="emphasis">_element_</span>by<span class="emphasis">_id("login").send_</span>keys(Keys.ENTER)</span><br><span class="line"></span><br><span class="line"><span class="section">#键盘组合件用法</span></span><br><span class="line"><span class="section">#ctrl+a 全选输入框内容</span></span><br><span class="line">driver.find<span class="emphasis">_element_</span>by<span class="emphasis">_id("kw").send_</span>keys(Keys.CONTROL,'a')</span><br><span class="line"></span><br><span class="line"><span class="section">#鼠标操作</span></span><br><span class="line">qqq=driver.find<span class="emphasis">_element_</span>by_xpath("...")</span><br><span class="line"><span class="section">#对定位到的元素执行鼠标右键操作</span></span><br><span class="line">ActionChains(driver).context_click(qqq).perform()</span><br><span class="line"></span><br><span class="line"><span class="section">#对定位到的元素执行鼠标双击操作</span></span><br><span class="line">ActionChains(driver).double_click(qqq).perform()</span><br><span class="line"></span><br><span class="line"><span class="section">#多层框架/窗口定位</span></span><br><span class="line">driver. switch_to.frame()</span><br><span class="line">driver.switch_to.window("windowName")</span><br><span class="line"></span><br><span class="line"><span class="section">#层级定位</span></span><br><span class="line"><span class="section">#在父亲元件下找到 link 为 Action 的子元素</span></span><br><span class="line">menu = dr.find<span class="emphasis">_element_</span>by<span class="emphasis">_id('dropdown1').find_</span>element<span class="emphasis">_by_</span>link_text('Action')</span><br><span class="line"><span class="section">#鼠标定位到子元素上</span></span><br><span class="line">webdriver.ActionChains(dr).move<span class="emphasis">_to_</span>element(menu).perform()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">#定位上传按钮，添加本地文件</span></span><br><span class="line">driver.find<span class="emphasis">_element_</span>by<span class="emphasis">_name("file").send_</span>keys('D:\\selenium<span class="emphasis">_use_</span>case\upload_file.txt')</span><br><span class="line"></span><br><span class="line"><span class="section">#alert、confirm、prompt 的处理</span></span><br><span class="line"><span class="section">#接受警告信息</span></span><br><span class="line">alert = driver.switch_to.alert()</span><br><span class="line">alert.accept()</span><br><span class="line"></span><br><span class="line"><span class="section">#取消对话框（如果有的话）</span></span><br><span class="line">alert = driver.switch_to.alert()</span><br><span class="line">alert.dismiss()</span><br><span class="line"></span><br><span class="line"><span class="section">#输入值</span></span><br><span class="line">alert = driver.switch_to.alert()</span><br><span class="line">alert.send_keys("xxx")</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>自动化测试</category>
      </categories>
      <tags>
        <tag>Selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>不知道起什么标题的随笔</title>
    <url>/2020/03/02/cat/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Welcome to my blog,enter password to read</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="1e77769d0b0dc558b67f725842e5f881a85e675c94dbbfae66b9dc5811480708">cecf0f690fad89e146dc64d968a0fa00a0fac4fd798ee2a8a052997dfdf0e438f9e5bb1fd5295fa3f3619586cb22ee894df8eea861e6ed4634eb6d4e509a255b6bb96b2d5890e66e3dfc7f2ab5ea013203a4d34f5a8ab364fdaed544bfd991a4b7d5a9acfa9b9692592eb73a5053a86d909026b2885c717b102ada076c151a8a7ca77875fa9e3dd31137d088f8eb3d909ab9d02406831bce1fa43b5dc8edd9a83dafd777afcff83ca9575a3f980493c7b21418bb2a2ed47fd584e19c704e7b05df24ce099621b0269f0c32295e288897d9484b27f9cb0a2943d6af248ab2c33445c4c35a1d25391780013418b437a67d0409e8f16b9c0647f3d38d7dda4446a2e32e2acb61c2d68ac1117ec5720e40940937336f838bd0e6faa8fb90d3bfc4e01da85b977b53b2cdd81a0c62f2e6c36a51482bb88be2636943b05c3beb0e63050e301beb4e37b21cdbe0a62013afdd3df645d62d27e48da21f4ce29bb5b57aff6c9cfdca705ddb1c7c901af1fac2f6760bf567b812e2cb1680a79b22d013f559ce1ad7e1fd9c4666bf81d681a8f4f283a143eff3c227f0c362719d97647c8845487dd293b03754464575ed273891039517f43313a522bd23fff5be8cf424274757ca5aef6c9065d7a75b406f2a7f6b7bffa34219045e37a2a090207a924a2cb11278e441e77c6fd1e939e60146f07ff961d80678b8ecf86581b540e08c67498a5dae8a092725f8c2d3ad341cdd9c2d3896b096141440126a04a9c280c91e4874bc4859e052e9d244e867be5b4cbb45c968facdb5eb9f51cd686fc1edb8f3e68bf7c9dabe604fde579c473dd0ec749981b74c7a89730548675f41fe11d2caa0dbe7658ff081663c435d5e0b07d4a4ae961bb23b5d8bd685431f1b1fa6deb90e73548b9d89c638a7bab297f451a4cb2dd2982a4aef0d66f248637f9498cfe81ab71356f53107944836074dbee9380136730788be5b3e85601300e041e13d42739fc51d3d678b06b584702072c23c3713afc594424f9f9b59cc7cdf92bc2a328dd5f2db99f620237b8049764c2c588f56ef37bce2d10c880f19468711e0494be186651028f6256768d5a11c871c9a3fac36e8104c5150210edf6822ee19f9bc00646332a67f4d7a2d55980e7dc661eba222fdab978e433f940d0de0ce30e37f9ccbdf075bd1a2d5a5edef2af4ff13278f526f1f0d561f34617b285f5d19d662c5c1126ab210746a29218d4cde84bb0cdc483d89c0aaf9d0376c64441ff5c31da565151e5833cd45fb249d02b0406d382b543b70c896abc1ba4465882ba7f76a143abd7eb2542cb592ee33e96114687f2ef27f56fafff9c352e9b46c99de94afaeb243cba672d9ff30b5bbac46f2dfa5e416dd6691d18add0115036892799c910a269b0b13bd4c96d1af7bcdb4eba388e15e791488abaddb2486cb4eba5e70a21907c0bbeef5fdef7d18b8462f42baf97a66c9e3c5bb6f13335817e632cb8462d22818adeb0229310a80dbe4eda7f6cf2c9bbfcdb21b1f1c95591ddd8319944d76f800fbf3da293d0bb41768fd7a0b0cd7d004f1ef928abf7fb5b20f30c3deadef8e250a28a3bf4100fbe9e288fa22398980c314af59e6f5f2aff5aaf1cbd138b011c312fbfc574da0eab2ba2d0458e790d3874201e59d25f5bb686a363b213afca6e29d33894194bceff26c294b60ed07ac621e65f4daca0957bd8ab5f484e323bbe5ccd2f1268b8973ae569d5ce63e0e0e1c1eceb303471c0c3c39bd4a6af77faa99c56ca1e0662cca0d7a4c21c339fcf01f6ac0f57fddf70ffaac92a0e3fc177dea130ef5370d1eff2fb27fd0f7fd55ae2e4d1a4528e5b8ce1182054f3fef6e47940613793c6fdc725733b259d3d09e86c694cb06a9b4fda6922ba7327809f11f1ca8c3d64358053917404859f8f5d8bff2e1bca79bb632804221b10085d0e7085616dbf36ac483a2c3eaa23c5eee98e8feda4f0736dce24ec80ed4165772b212c08c0672098d741647090cb9429103f64d2da72ccf3db12c303b1c787a7702ec33838c985d4a610c81dcb2780c6e7507e09acfdc4d9d79fa352a4d2edb71360d4e53c60b93914309f9f90035e8f914237c11ceb9561db1292b6be8bdcb392a481e9a063c07d8e1fd4ad768956fbe882f534a5a5fe75657c225559d5faa0586fa925770f4ba6647e16ecebf4da32f38e78ef3c411fef35956a738aa44e00d46e40b40d34bf76f89a54207cfa888811c949ea76354214465466fd4ecac762186238dd3ee7c386ca4a5a3d5e256c0677b9fb31c096a333820fed5fdb652cfcd419f217485427780956174ee7995f4f931fdb14cccb04dabe17ba387043e16d0364d27a24bf54eed7c5c92059b83ee5ad4e09ff5ce570b3b1e9b6de1865492e0b82990faf8b08f998d1629d2c2f0c842ad358e2284dfc637629fccb889313b1978378ba45b88149563216b11dfb9f6aad2d3b5ca4ab5492b8ec51163c6bbf436cd5353679d7c8721f4a04cb16839c49e3d1327d1cb41db99040ef8155d6a7947a58c6ffcabb8cfb8971610b95423d09d6472bc62f8f8e4f587d563b250a0c6d69dc024d44b7ad09275f599461391daa0af64e7eb2546a025b08798a691e6002d5ec5b9948dd7610265623f2f933470aca78cde17f8abffb27bae0820b6a0bb45221c1a085f6f4170de067be405af5b90b899e19d66af58efa907cad112d8e68e1164c5134476478f6f1185142a76c9e454754fc073a04ac91e6e47fb254bf06377313440594b7262f8dadfa0cec4332f2d6b7d9c7bf7462e22877cf566276513228965055a1d6f351cca19204f035f81daf3197fbd3ca2a4332d3891d5d8261df557f631f7110cc4600eed1eb6d1b215f636cff9bdabf85a25f430b04a9643440ef67f77239776e24e1c7d8a6ba0013e7c5d38472445d7d79f9fc39a229879e1305d3c36fdaaad8b020ab1c41315e883d3d60feded8154590456ad1101a61f030bd703b2171c3d106b520ca40cc4e245940a5dc7f0a3bd1cdadb4159e7f423359af5ba7c89410bdeaf024269222ee1fda3e67ed4af5ffe81c938ef45d39c71a7d50923d708be6b23697ea6473db1dcce0052d7620b2458f598d1c88ffc6e7848e22bab30fdb23a7676c3e517a33c602de6e7331d8e817cc44db1048e45a310d4c1df455a66b68c6c9561c90c73d8b331ec40694e226611a35765009d03c9030d095c6a0de252f1bc6d8988003cc9a7c91a35f8ec246c2bdf1081106ec194c59f78ca550cabd0c52be27ccd6892ff3efcd89bc4455d2832b6d88650fc85d4d84cd5bb236fcf3f8f8155432c5edee90cdce1e20fa1fc9e0ca78527f787bbec807163353c3e7314a2af94f6db3caf092afbf9f14ce2b6ce85346b3f72b0aaf78b4d91461ca49f421a46b65861f538f9e5fcb2b88677a55e9a4e2c1b751be88ba22370ee8ad96a06c71ac40fd11b08d3961e667f346915805577f00db044c8d1c44c558a095fb3dbac5a97d94fb2a45849e1a128a5b1411b1ce991a59640c0f2ab3879216b0973b694c8fff859f6de9f8b33a6472c08101a745a4ec8804a4ea28d9fccc5e9b78e5f900dcc084de8d871cf284bcce046706086d350fd297dafaca237aac699ea45a40968579c707a7174f4328bc6dcb7e67eb376a17b74bd33e35b706383f7f8428e6cb0ffd45a94efed33b5a467cb4108c333da92e6a8608f0fcf5ab4e0ca14d4cdf4b402e4fb4fb4c60cf772f964653b90aaa8e99bcd2eaa42703c906de2ccc0c47bf47d2f1ff3ed5f9233a4bac06a606d3ec07d2e9d8339f61593ee4f2c6b9116696399827c2ea596128386603189c2ae222739578fd28bedbd27f38c32d0df37719b28ca8329e1c6be4c2625f34e354df72ea2556621070a59caef2946988422665578a8c9a6d3d529c5aebfc2ee77476534a57d1ff3c6f7f1666c28d4bfc263b933fbe02525320e5d72e137617719449af940cb0871b80179f393eee1c2b371bb9aa8ded81eddc6e30837ed81f1a4096d5d791ea9c5e21c2f5935e3a5249638565968444e20128fa4b008cbd49717c345ddbfa9797dee3b6d9fd3720ece67b14f10d3e66eb3445665b1a4f208b78a1eb39965df1efff141cde074d57a2ec930d2eeab07f00b74508d8158ab54f963ac5bc4b476cf69fb9cf6c8e3d034835092d136ae6fbec48f2d7c40a372abe0096ad2714f13ccaa768ce8eaf3894532a4853d1d2da89b1c0442d524aaa6a15e173c95cd1fea624162131a650d319d7c67fbbf8934127857f4667a4d50a4d015b1115262391eaab6cd3c967f8afa3f1cd5fed7e5459eafc381a1800567147fbab47007f3f21038597948bc4f59fcb2acd2b623fb7dab810bfb90a00c1009d747cab50b92d68db3e2f0cb45cceaf54420f233a929ba302ad5711a0f0688f0ca00330486b2afdb5b45f489ebd1f376835260debfb3451b1b9f3b87485e0f94f377b46700fa5c47df0ca5806bd605e10ce2b4dc99cddc7a2b1339f92d6bcd692899c664760577460d31cae35d8989d67de70953d520d78d283db3df88c0e0ea85ef347d1334ee35d47dbfec837edcbe</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx入门</title>
    <url>/2020/03/01/nginx/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><img src="/2020/03/01/nginx/Nginxico.jpg" title="Nginx"><a id="more"></a><h2 id="简单介绍一下nginx"><a href="#简单介绍一下nginx" class="headerlink" title="简单介绍一下nginx"></a>简单介绍一下nginx</h2><p>​ Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。 Nginx 主要提供反向代理、负载均衡、动静分离(静态资源服务)等服务。下面我简单地介绍一下这些名词。</p><h4 id="正向代理和反向代理的区别"><a href="#正向代理和反向代理的区别" class="headerlink" title="正向代理和反向代理的区别"></a>正向代理和反向代理的区别</h4><h4 id="一、正向代理"><a href="#一、正向代理" class="headerlink" title="一、正向代理"></a>一、正向代理</h4><p>所谓正向代理就是顺着请求的方向进行的代理，需要在本地浏览器进行配置，即代理服务器它是由你配置为你服务，去请求目标服务器地址。</p><p>比如我们要去访问谷歌网站，因为国内有墙我们直接访问不通，那么我们就可以找一个代理服务器为我们服务，我们通过可以访问外网的服务器请求谷歌网站，对于谷歌而言它只知道有一个服务器访问了自己，并不知道这件事你是访问不了它，找了一个代理服务器访问自己。</p><p>（正向代理隐藏真实客户端，反向代理隐藏服务端）</p><p>之前看到过一个非常通俗的例子，就拿借钱来举例，A急用钱，C正好有钱，但是C不会直接借给你。你和B的关系比较好，B可以找C借到钱。你和B沟通后，由B来找C借钱然后再给你，C是不知道真正借钱的是谁的。</p><p>我们使用的VPN就是这样，我们想访问外网就需要找到一个代理服务器来我们服务，我们可以通过代理给我们代理到FaceBook、Ins、 YouTube等，它是代理的你。</p><h4 id="二、反向代理"><a href="#二、反向代理" class="headerlink" title="二、反向代理"></a>二、反向代理</h4><p>反向代理与正向代理相反，代理服务器是为目标服务器服务的，虽然整体的请求返回路线都一样的都是Client到Proxy到Server。</p><p>比如 我么要百度网站，百度的代理服务器对外的域名为<a href="https://baidu.com" target="_blank" rel="noopener external nofollow noreferrer">https://baidu.com</a>。具体内部的服务器节点我们不知道。显示中我们通过访问百度的代理服务器后，代理服务器给我们转发请求到它们N多的服务器节点中的一个给我们进行搜索后将结果返回。</p><p>再举例：我们需要租房，但是我们又不知道谁有房源，所以我们找了一家找房平台，你提交资料后，找房平台会直接推荐房源给你。但是你不知道，也不用关注房源从哪里来。找房平台内部他们可以从哪一个房东拿到的房源。对你而言找房平台和他们的房东是一起的。</p><p>同样通过上面我们例子可以看到，此时的代理服务器和后面的目标主机是一个系统的（百度公司，找房平台）。他们是对外提供服务的，所以称为反向代理，代理的是后的人。</p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>​ 负载均衡，是一种计算机技术，用来在多个计算机（计算机集群）、网络连接、CPU、磁盘驱动动器或其他资源中分配负载，已达到最优化资源使用、最大的吞吐率、最小相应时间，同时避免过载的目的。</p><h4 id="一、为什么需要负载均衡"><a href="#一、为什么需要负载均衡" class="headerlink" title="一、为什么需要负载均衡"></a>一、为什么需要负载均衡</h4><p>​ 我们在日常生活中经常免不了要去一些比较拥挤的地方，比如地铁站、火车站、电影院、银行等。无论是买票，还是排队入场，这些场所一般都会设置多个服务店或者入口的。如果没人引导的话，大多数情况下，最近的入口会挤满人。而那些距离较远的服务点入口就宽松很多。</p><p>​ 这种情况下，就会大大浪费资源，因为如果可以吧这些排队的人很好的分散到各个入口的 话就会大大缩短排队的时间，网站的建设也一样。为了提升网站的服务能力，很多网站采用集群部署，就像话剧院有多个入口一样。这时候，就需要一个协调者，来均衡分配这些用户的请求，可以让用户的可以均衡的分派到不同的服务器上。</p><p><a href="https://baijiahao.baidu.com/s?id=1634386941492502616&wfr=spider&for=pc" target="_blank" rel="noopener external nofollow noreferrer">用故事来给你讲负载均衡的原理</a></p><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><h4 id="1-1-动态页面与静态页面区别"><a href="#1-1-动态页面与静态页面区别" class="headerlink" title="1.1 动态页面与静态页面区别"></a>1.1 动态页面与静态页面区别</h4><ul><li>静态资源：当用户多次访问这个资源，资源的源代码永远不会改变的资源</li><li>动态资源：当用户多次访问这个资源，资源的源代码可能会发生改变。</li></ul><h4 id="1-2-什么是动静分离"><a href="#1-2-什么是动静分离" class="headerlink" title="1.2 什么是动静分离"></a>1.2 什么是动静分离</h4><ul><li>动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路。</li><li>动静分离简单的概括是：动态文件和静态文件的分离。</li><li>伪静态：网站如果向北搜索引擎搜到，动态页面静态技术freemarker等模板引擎技术。</li></ul><h4 id="1-3-为什么要用动静分离"><a href="#1-3-为什么要用动静分离" class="headerlink" title="1.3 为什么要用动静分离"></a>1.3 为什么要用动静分离</h4><ul><li>在我们的软件开发中，有些请求是需要后台处理的（如： .jsp,.do等等），有些请求是不需要经过后台处理的（如：css、html，jpg，js等等文件），这些不需要经过后台处理的文件称为静态文件。因此我们后台处理忽略静态文件。这回有人又说我后台静态文件不就完了吗。当然这是可以的，但是这些后台的请求次数就明显增多了。在我们对资源的相应速度有要求的时候，我们应该使用这种动静分类的策略去解决。</li><li>动静分离将静态资源（HTML、JavaScript、CSS、img等文件）与后台应用分开部署，提高用户访问静态diamante的速度，降低对后台应用访问。这里我们将静态资源放到nginx中，动态资源转发到tomcat服务器中</li><li>因此，动态资源转发到tomcat服务器我们就使用到了前面讲到的反向代理了。</li><li>总结来说，Nginx是通过url来区分请求的类型，并转发给不同的服务端。</li></ul><img src="/2020/03/01/nginx/nginx.jpg" title="Nginx实现动静分离"><h2 id="Nginx在Linux系统安装"><a href="#Nginx在Linux系统安装" class="headerlink" title="Nginx在Linux系统安装"></a>Nginx在Linux系统安装</h2><h4 id="2-1-源码编译安装"><a href="#2-1-源码编译安装" class="headerlink" title="2.1 源码编译安装"></a>2.1 源码编译安装</h4><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener external nofollow noreferrer">http://nginx.org/en/download.html</a></p><p>到官网下载，然后用XFTP上传到root目录</p><blockquote><p>解压文件 tar -zxvf nginx-1.16.0.tar.gz<br>安装依赖项 yum install gcc pcre-develop zlib-devel<br>进入nginx目录，输入./configure命令在目录里生成Makefile文件，成功会显示objs目录<br>再输入make命令生成二进制文件，然后输入make install</p></blockquote><h4 id="2-2-通过Yum安装Nginx"><a href="#2-2-通过Yum安装Nginx" class="headerlink" title="2.2 通过Yum安装Nginx"></a>2.2 通过Yum安装Nginx</h4><p>这种方式是非常简单方便，nginx官网上也有介绍</p><p><a href="http://nginx.org/en/linux_packages.html#RHEL-CentOS" target="_blank" rel="noopener external nofollow noreferrer">http://nginx.org/en/linux_packages.html#RHEL-CentOS</a></p><blockquote><p>首先配置本机阿里源，然后yum安装直接用systemctl启动nginx服务</p></blockquote><h4 id="2-3-Nginx常用命令"><a href="#2-3-Nginx常用命令" class="headerlink" title="2.3 Nginx常用命令"></a>2.3 Nginx常用命令</h4><p>执行nginx命令要进入nginx目录<br>sudo nginx #打开 nginx<br>nginx -s reload|reopen|stop|quit #重新加载配置|重启|停止|退出 nginx<br>nginx -t #测试配置是否有语法错误<br>nginx [-?hvVtq] [-s signal] [-c filename] [-p prefix] [-g directives]</p><p>-?,-h : 打开帮助信息<br>-v : 显示版本信息并退出<br>-V : 显示版本和配置选项信息，然后退出<br>-t : 检测配置文件是否有语法错误，然后退出<br>-q : 在检测配置文件期间屏蔽非错误信息<br>-s signal : 给一个 nginx 主进程发送信号：stop（停止）, quit（退出）, reopen（重启）, reload（重新加载配置文件）<br>-p prefix : 设置前缀路径（默认是：/usr/local/Cellar/nginx/1.2.6/）<br>-c filename : 设置配置文件（默认是：/usr/local/etc/nginx/nginx.conf）<br>-g directives : 设置配置文件外的全局指令</p><p>如果不想每次都敲命令，可以在nginx安装目录下新添一个启动批处理文件startup.bat，双击即可运行。内容如下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem 如果启动前已经启动nginx并记录下pid文件，会kill指定进程</span><br><span class="line">nginx.exe -s stop</span><br><span class="line"></span><br><span class="line">rem 测试配置文件语法正确性</span><br><span class="line">nginx.exe -t -c conf/nginx.conf</span><br><span class="line"></span><br><span class="line">rem 显示版本信息</span><br><span class="line">nginx.exe -v</span><br><span class="line"></span><br><span class="line">rem 按照指定配置去启动nginx</span><br><span class="line">nginx.exe -c conf/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="Nginx配置反向实例（反向代理准备工作）"><a href="#Nginx配置反向实例（反向代理准备工作）" class="headerlink" title="Nginx配置反向实例（反向代理准备工作）"></a>Nginx配置反向实例（反向代理准备工作）</h2><h4 id="1-实现效果"><a href="#1-实现效果" class="headerlink" title="1.实现效果"></a>1.实现效果</h4><p>(1)打开浏览器，在浏览器地址输入 www.网址.com，跳转到linux的tomcat页面中。</p><h4 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2.准备工作"></a>2.准备工作</h4><p>(1)在linux系统安装tomcat，使用默认端口号8080<br>首先<a href="https://tomcat.apache.org/download-10.cgi" target="_blank" rel="noopener external nofollow noreferrer">下载Tomcat</a> 与<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html" target="_blank" rel="noopener external nofollow noreferrer">Java安装包</a> 安装包将其传入linux系统中解压<br>进入Tomcat的bin目录中，./startup.sh启动tomcat服务器<br>对外开放访问的端口 重启防火墙 查看对外开放的端口</p><img src="/2020/03/01/nginx/%E6%89%93%E5%BC%80%E9%98%B2%E7%81%AB%E5%A2%99.png" title="firewall-cmd --add-port&#x3D;8080&#x2F;tcp --permanent"><blockquote><p>Win10和Linux传输文件推荐两个工具 :</p><p>1、<a href="https://www.netsarang.com/en/downloading/" target="_blank" rel="noopener external nofollow noreferrer">点击下载XShell</a> 2、<a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener external nofollow noreferrer">点击下载WinScp</a></p></blockquote><img src="/2020/03/01/nginx/WinScp.png" title="WinScp"> <img src="/2020/03/01/nginx/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83.png" title="配置Java环境"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Windows10内置PowerShell连接虚拟机Linux系统</title>
    <url>/2020/02/24/PowerShell/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><div class="note info"><p>为了学习和使用Linux，多数人选择了使用虚拟机的方式来安装Linux。</p></div>虚拟机的选择可以参考：<a href="https://www.10besty.com/best-virtual-machine-applications/" target="_blank" rel="noopener external nofollow noreferrer"> 2020年最好的虚拟机测评推荐</a><p>​我之前使用的<a href="https://store.vmware.com/store?Action=home&Env=BASE&Locale=zh_CN&SiteID=vmware" target="_blank" rel="noopener external nofollow noreferrer">VMware Workstation Pro</a>，但是因为体积大需要激活码注册，所以我现在现阶段选择使用的是Virtualbox，轻量级并且免费，功能方面成熟也齐全。VirtualBox提供了多种网络连接方式，不同的网络连接方式决定了虚拟机是否可以联网，以及是否可以和宿主机互相ping通。本文将主要介绍常用的桥接、NAT和host-only三种网络连接方式的区别，以减少大家在使用中的困扰。</p><a id="more"></a><h4 id="一、不同网络连接方式对网络影响简介"><a href="#一、不同网络连接方式对网络影响简介" class="headerlink" title="一、不同网络连接方式对网络影响简介"></a>一、不同网络连接方式对网络影响简介</h4><table><thead><tr><th></th><th>桥接</th><th>NAT</th><th>host-only</th></tr></thead><tbody><tr><td>虚拟机与宿主机</td><td>彼此互通，处于同一网段</td><td>虚拟机能访问宿主机；宿主机不能访问虚拟机</td><td>虚拟机不能访问宿主机；宿主机能访问虚拟机</td></tr><tr><td>虚拟机与虚拟机</td><td>彼此互通，处于同一网段</td><td>彼此不通</td><td>彼此互通，处于同一网段</td></tr><tr><td>虚拟机与其他主机</td><td>彼此互通，处于同一网段</td><td>虚拟机能访问其他主机；其他主机不能访问虚拟机</td><td>彼此不通；需要设置</td></tr><tr><td>虚拟机与互联网</td><td>虚拟机可以上网</td><td>虚拟机可以上网</td><td>彼此不通；需要设置</td></tr></tbody></table><h4 id="二、virtualbox视图快捷键说明"><a href="#二、virtualbox视图快捷键说明" class="headerlink" title="二、virtualbox视图快捷键说明"></a>二、virtualbox视图快捷键说明</h4><p>刚才因为无意触碰到全屏模式导致整个页面分辨率都模糊难触控，搜了半天才退出，记录下：<br>首先说明一下，Virtualbox中默认的host键是右ctrl，调出快捷菜单的组合键是host+home，这个请记住，因为在有的显示模式下是不显示菜单的。<br>‘视图’菜单下共有5个选项，分别是：</p><ul><li><p>切换到全屏模式 HOST+F</p></li><li><p>切换到无缝模式 HOST+L</p></li><li><p>切换到自动缩放模式 HOST+C</p></li><li><p>自动调整显示尺寸 HOST+G</p></li><li><p>自动调整窗口大小 HOST+A</p></li></ul><p>每个选项前都有个小图标，如果小图标上显示一个对号，意思就是打开了这个选项。注意无缝模式和自动调整显示尺寸需要guest additions支持，所以非windows的虚拟机里这两个选项是灰色的。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 8</title>
    <url>/2020/02/22/CentOS8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><blockquote><h4 id="CentOS-8-的新特性"><a href="#CentOS-8-的新特性" class="headerlink" title="CentOS 8 的新特性"></a>CentOS 8 的新特性</h4></blockquote><ul><li>DNF 成为了默认的软件包管理器，同时 yum 仍然是可用的</li><li>使用网络管理器（<code>nmcli</code> 和 <code>nmtui</code>）进行网络配置，移除了网络脚本</li><li>使用 Podman 进行容器管理</li><li>引入了两个新的包仓库：BaseOS 和 AppStream</li><li>使用 Cockpit 作为默认的系统管理工具</li><li>默认使用 Wayland 作为显示服务器</li><li><code>iptables</code> 将被 <code>nftables</code> 取代</li><li>使用 Linux 内核 4.18</li><li>提供 PHP 7.2、Python 3.6、Ansible 2.8、VIM 8.0 和 Squid 4</li></ul><a id="more"></a><blockquote><h4 id="CentOS-8-所需的最低硬件配置"><a href="#CentOS-8-所需的最低硬件配置" class="headerlink" title="CentOS 8 所需的最低硬件配置"></a>CentOS 8 所需的最低硬件配置</h4></blockquote><ul><li>2 GB RAM</li><li>64 位 x86 架构、2 GHz 或以上的 CPU</li><li>20 GB 硬盘空间</li></ul><blockquote><h4 id="镜像下载地址"><a href="#镜像下载地址" class="headerlink" title="镜像下载地址"></a>镜像下载地址</h4></blockquote><p>CentOS 8 下载：<a href="https://centos.org/download/" target="_blank" rel="noopener external nofollow noreferrer">https://centos.org/download/</a></p><p>国内镜像下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/centos/" target="_blank" rel="noopener external nofollow noreferrer">https://mirrors.tuna.tsinghua.edu.cn/centos/</a></p><blockquote><h3 id="CentOS配置阿里云yum源和epel源"><a href="#CentOS配置阿里云yum源和epel源" class="headerlink" title="CentOS配置阿里云yum源和epel源"></a>CentOS配置阿里云yum源和epel源</h3></blockquote><p># cd /etc/yum.repos.d</p><img src="/2020/02/22/CentOS8/Aliyun.png" title="Aliyun"><p># vim CentOS-AppStream.repo<br><strong>baseurl=<a href="https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/" target="_blank" rel="noopener external nofollow noreferrer">https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/</a></strong></p><img src="/2020/02/22/CentOS8/AppStream.png" title="AppStream"><p># vim CentOS-Base.repo<br><strong>baseurl=<a href="https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/" target="_blank" rel="noopener external nofollow noreferrer">https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/</a></strong></p><img src="/2020/02/22/CentOS8/BaseOS.png" title="BaseOS"><p># vim CentOS-Extras.repo<br><strong>baseurl=<a href="https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os/" target="_blank" rel="noopener external nofollow noreferrer">https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os/</a></strong></p><img src="/2020/02/22/CentOS8/Extras.png" title="Extras"><p># dnf -y install epel-release<br># dnf clean all<br># dnf makecache<br># dnf repolist</p><img src="/2020/02/22/CentOS8/DNF.png" title="epel"><!-- rebuild by neat -->]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>git使用教程</title>
    <url>/2020/02/15/Git/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><div class="note info"><p>由于最近使用Hexo+GitPage搭建博客 使用Git命令比较多 故将Git使用方法写一篇总结。</p></div><img src="/2020/02/15/Git/GitHub.jpg" title="GitHub.com"><a id="more"></a><p><strong>一、 Git 常用命令速查</strong></p><p>git branch 查看本地所有分支<br>git status 查看当前状态<br>git commit 提交<br>git branch -a 查看所有的分支<br>git branch -r 查看远程所有分支<br>git commit -am “init” 提交并且加注释<br>git remote add origin <a href="mailto:git@192.168.1.119" rel="external nofollow noreferrer">git@192.168.1.119</a>:ndshow<br>git push origin master 将文件给推到服务器上<br>git remote show origin 显示远程库origin里的资源<br>git push origin master:develop<br>git push origin master:hb-dev 将本地库与服务器上的库进行关联<br>git checkout –track origin/dev 切换到远程dev分支<br>git branch -D master develop 删除本地库develop<br>git checkout -b dev 建立一个新的本地分支dev<br>git merge origin/dev 将分支dev与当前分支进行合并<br>git checkout dev 切换到本地dev分支<br>git remote show 查看远程库<br>git add .<br>git rm 文件名(包括路径) 从git中删除指定文件<br>git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来<br>git config –list 看所有用户<br>git ls-files 看已经被提交的<br>git rm [file name] 删除一个文件<br>git commit -a 提交当前repos的所有的改变<br>git add [file name] 添加一个文件到git index<br>git commit -v 当你用－v参数的时候可以看commit的差异<br>git commit -m “This is the message describing the commit” 添加commit信息<br>git commit -a -a是代表add，把所有的change加到git index里然后再commit<br>git commit -a -v 一般提交命令<br>git log 看你commit的日志<br>git diff 查看尚未暂存的更新<br>git rm a.a 移除文件(从暂存区和工作区中删除)<br>git rm –cached a.a 移除文件(只从暂存区中删除)<br>git commit -m “remove” 移除文件(从Git中删除)<br>git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)<br>git diff –cached 或 $ git diff –staged 查看尚未提交的更新<br>git stash push 将文件给push到一个临时空间中<br>git stash pop 将文件从临时空间pop下来<br>-——————————————————–<br>git remote add origin <a href="mailto:git@github.com" rel="external nofollow noreferrer">git@github.com</a>:username/Hello-World.git<br>git push origin master 将本地项目给提交到服务器中<br>-———————————————————-<br>git pull 本地与服务器端同步<br>-—————————————————————-<br>git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。<br>git push origin serverfix:awesomebranch<br>-—————————————————————–<br>git fetch 相当于是从远程获取最新版本到本地，不会自动merge<br>git commit -a -m “log_message” (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：<br>git branch branch_0.1 master 从主分支master创建branch_0.1分支<br>git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0<br>git checkout branch_1.0/master 切换到branch_1.0/master分支<br>du -hs</p><p>git branch 删除远程branch<br>git push origin :branch_remote_name<br>git branch -r -d branch_remote_name<br>-———————————————————-</p><p>初始化版本库，并提交到远程服务器端<br>mkdir WebApp<br>cd WebApp<br>git init 本地初始化<br>touch README<br>git add README 添加文件<br>git commit -m ‘first commit’<br>git remote add origin <a href="mailto:git@github.com" rel="external nofollow noreferrer">git@github.com</a>:daixu/WebApp.git</p><p>增加一个远程服务器端</p><p>上面的命令会增加URL地址为‘git@github.com:daixu/WebApp.git’，名称为origin的远程服务器库，以后提交代码的时候只需要使用 origin别名即可</p><h2 id="二、-Git-命令速查表"><a href="#二、-Git-命令速查表" class="headerlink" title="二、 Git 命令速查表"></a><strong>二、 Git 命令速查表</strong></h2><h3 id="1、常用的Git命令"><a href="#1、常用的Git命令" class="headerlink" title="1、常用的Git命令"></a>1、常用的Git命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git add</td><td>添加至暂存区</td></tr><tr><td>git add–interactive</td><td>交互式添加</td></tr><tr><td>git apply</td><td>应用补丁</td></tr><tr><td>git am</td><td>应用邮件格式补丁</td></tr><tr><td>git annotate</td><td>同义词，等同于 git blame</td></tr><tr><td>git archive</td><td>文件归档打包</td></tr><tr><td>git bisect</td><td>二分查找</td></tr><tr><td>git blame</td><td>文件逐行追溯</td></tr><tr><td>git branch</td><td>分支管理</td></tr><tr><td>git cat-file</td><td>版本库对象研究工具</td></tr><tr><td>git checkout</td><td>检出到工作区、切换或创建分支</td></tr><tr><td>git cherry-pick</td><td>提交拣选</td></tr><tr><td>git citool</td><td>图形化提交，相当于 git gui 命令</td></tr><tr><td>git clean</td><td>清除工作区未跟踪文件</td></tr><tr><td>git clone</td><td>克隆版本库</td></tr><tr><td>git commit</td><td>提交</td></tr><tr><td>git config</td><td>查询和修改配置</td></tr><tr><td>git describe</td><td>通过里程碑直观地显示提交ID</td></tr><tr><td>git diff</td><td>差异比较</td></tr><tr><td>git difftool</td><td>调用图形化差异比较工具</td></tr><tr><td>git fetch</td><td>获取远程版本库的提交</td></tr><tr><td>git format-patch</td><td>创建邮件格式的补丁文件。参见 git am 命令</td></tr><tr><td>git grep</td><td>文件内容搜索定位工具</td></tr><tr><td>git gui</td><td>基于Tcl/Tk的图形化工具，侧重提交等操作</td></tr><tr><td>git help</td><td>帮助</td></tr><tr><td>git init</td><td>版本库初始化</td></tr><tr><td>git init-db*</td><td>同义词，等同于 git init</td></tr><tr><td>git log</td><td>显示提交日志</td></tr><tr><td>git merge</td><td>分支合并</td></tr><tr><td>git mergetool</td><td>图形化冲突解决</td></tr><tr><td>git mv</td><td>重命名</td></tr><tr><td>git pull</td><td>拉回远程版本库的提交</td></tr><tr><td>git push</td><td>推送至远程版本库</td></tr><tr><td>git rebase</td><td>分支变基</td></tr><tr><td>git rebase–interactive</td><td>交互式分支变基</td></tr><tr><td>git reflog</td><td>分支等引用变更记录管理</td></tr><tr><td>git remote</td><td>远程版本库管理</td></tr><tr><td>git repo-config*</td><td>同义词，等同于 git config</td></tr><tr><td>git reset</td><td>重置改变分支“游标”指向</td></tr><tr><td>git rev-parse</td><td>将各种引用表示法转换为哈希值等</td></tr><tr><td>git revert</td><td>反转提交</td></tr><tr><td>git rm</td><td>删除文件</td></tr><tr><td>git show</td><td>显示各种类型的对象</td></tr><tr><td>git stage*</td><td>同义词，等同于 git add</td></tr><tr><td>git stash</td><td>保存和恢复进度</td></tr><tr><td>git status</td><td>显示工作区文件状态</td></tr><tr><td>git tag</td><td>里程碑管理</td></tr></tbody></table><h3 id="2、对象库操作相关命令"><a href="#2、对象库操作相关命令" class="headerlink" title="2、对象库操作相关命令"></a>2、对象库操作相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git commit-tree</td><td>从树对象创建提交</td></tr><tr><td>git hash-object</td><td>从标准输入或文件计算哈希值或创建对象</td></tr><tr><td>git ls-files</td><td>显示工作区和暂存区文件</td></tr><tr><td>git ls-tree</td><td>显示树对象包含的文件</td></tr><tr><td>git mktag</td><td>读取标准输入创建一个里程碑对象</td></tr><tr><td>git mktree</td><td>读取标准输入创建一个树对象</td></tr><tr><td>git read-tree</td><td>读取树对象到暂存区</td></tr><tr><td>git update-index</td><td>工作区内容注册到暂存区及暂存区管理</td></tr><tr><td>git unpack-file</td><td>创建临时文件包含指定 blob 的内容</td></tr><tr><td>git write-tree</td><td>从暂存区创建一个树对象</td></tr></tbody></table><h3 id="3、引用操作相关命令"><a href="#3、引用操作相关命令" class="headerlink" title="3、引用操作相关命令"></a>3、引用操作相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git check-ref-format</td><td>检查引用名称是否符合规范</td></tr><tr><td>git for-each-ref</td><td>引用迭代器，用于shell编程</td></tr><tr><td>git ls-remote</td><td>显示远程版本库的引用</td></tr><tr><td>git name-rev</td><td>将提交ID显示为友好名称</td></tr><tr><td>git peek-remote*</td><td>过时命令，请使用 git ls-remote</td></tr><tr><td>git rev-list</td><td>显示版本范围</td></tr><tr><td>git show-branch</td><td>显示分支列表及拓扑关系</td></tr><tr><td>git show-ref</td><td>显示本地引用</td></tr><tr><td>git symbolic-ref</td><td>显示或者设置符号引用</td></tr><tr><td>git update-ref</td><td>更新引用的指向</td></tr><tr><td>git verify-tag</td><td>校验 GPG 签名的Tag</td></tr></tbody></table><h3 id="4、版本库管理相关命令"><a href="#4、版本库管理相关命令" class="headerlink" title="4、版本库管理相关命令"></a>4、版本库管理相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git count-objects</td><td>显示松散对象的数量和磁盘占用</td></tr><tr><td>git filter-branch</td><td>版本库重构</td></tr><tr><td>git fsck</td><td>对象库完整性检查</td></tr><tr><td>git fsck-objects*</td><td>同义词，等同于 git fsck</td></tr><tr><td>git gc</td><td>版本库存储优化</td></tr><tr><td>git index-pack</td><td>从打包文件创建对应的索引文件</td></tr><tr><td>git lost-found*</td><td>过时，请使用 git fsck –lost-found 命令</td></tr><tr><td>git pack-objects</td><td>从标准输入读入对象ID，打包到文件</td></tr><tr><td>git pack-redundant</td><td>查找多余的 pack 文件</td></tr><tr><td>git pack-refs</td><td>将引用打包到 .git/packed-refs 文件中</td></tr><tr><td>git prune</td><td>从对象库删除过期对象</td></tr><tr><td>git prune-packed</td><td>将已经打包的松散对象删除</td></tr><tr><td>git relink</td><td>为本地版本库中相同的对象建立硬连接</td></tr><tr><td>git repack</td><td>将版本库未打包的松散对象打包</td></tr><tr><td>git show-index</td><td>读取包的索引文件，显示打包文件中的内容</td></tr><tr><td>git unpack-objects</td><td>从打包文件释放文件</td></tr><tr><td>git verify-pack</td><td>校验对象库打包文件</td></tr></tbody></table><h3 id="5、数据传输相关命令"><a href="#5、数据传输相关命令" class="headerlink" title="5、数据传输相关命令"></a>5、数据传输相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git fetch-pack</td><td>执行 git fetch 或 git pull 命令时在本地执行此命令，用于从其他版本库获取缺失的对象</td></tr><tr><td>git receive-pack</td><td>执行 git push 命令时在远程执行的命令，用于接受推送的数据</td></tr><tr><td>git send-pack</td><td>执行 git push 命令时在本地执行的命令，用于向其他版本库推送数据</td></tr><tr><td>git upload-archive</td><td>执行 git archive –remote 命令基于远程版本库创建归档时，远程版本库执行此命令传送归档</td></tr><tr><td>git upload-pack</td><td>执行 git fetch 或 git pull 命令时在远程执行此命令，将对象打包、上传</td></tr></tbody></table><h3 id="6、邮件相关命令"><a href="#6、邮件相关命令" class="headerlink" title="6、邮件相关命令"></a>6、邮件相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git imap-send</td><td>将补丁通过 IMAP 发送</td></tr><tr><td>git mailinfo</td><td>从邮件导出提交说明和补丁</td></tr><tr><td>git mailsplit</td><td>将 mbox 或 Maildir 格式邮箱中邮件逐一提取为文件</td></tr><tr><td>git request-pull</td><td>创建包含提交间差异和执行PULL操作地址的信息</td></tr><tr><td>git send-email</td><td>发送邮件</td></tr></tbody></table><h3 id="7、协议相关命令"><a href="#7、协议相关命令" class="headerlink" title="7、协议相关命令"></a>7、协议相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git daemon</td><td>实现Git协议</td></tr><tr><td>git http-backend</td><td>实现HTTP协议的CGI程序，支持智能HTTP协议</td></tr><tr><td>git instaweb</td><td>即时启动浏览器通过 gitweb 浏览当前版本库</td></tr><tr><td>git shell</td><td>受限制的shell，提供仅执行Git命令的SSH访问</td></tr><tr><td>git update-server-info</td><td>更新哑协议需要的辅助文件</td></tr><tr><td>git http-fetch</td><td>通过HTTP协议获取版本库</td></tr><tr><td>git http-push</td><td>通过HTTP/DAV协议推送</td></tr><tr><td>git remote-ext</td><td>由Git命令调用，通过外部命令提供扩展协议支持</td></tr><tr><td>git remote-fd</td><td>由Git命令调用，使用文件描述符作为协议接口</td></tr><tr><td>git remote-ftp</td><td>由Git命令调用，提供对FTP协议的支持</td></tr><tr><td>git remote-ftps</td><td>由Git命令调用，提供对FTPS协议的支持</td></tr><tr><td>git remote-http</td><td>由Git命令调用，提供对HTTP协议的支持</td></tr><tr><td>git remote-https</td><td>由Git命令调用，提供对HTTPS协议的支持</td></tr><tr><td>git remote-testgit</td><td>协议扩展示例脚本</td></tr></tbody></table><h3 id="8、版本库转换和交互相关命令"><a href="#8、版本库转换和交互相关命令" class="headerlink" title="8、版本库转换和交互相关命令"></a>8、版本库转换和交互相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git archimport</td><td>导入Arch版本库到Git</td></tr><tr><td>git bundle</td><td>提交打包和解包，以便在不同版本库间传递</td></tr><tr><td>git cvsexportcommit</td><td>将Git的一个提交作为一个CVS检出</td></tr><tr><td>git cvsimport</td><td>导入CVS版本库到Git。或者使用 cvs2git</td></tr><tr><td>git cvsserver</td><td>Git的CVS协议模拟器，可供CVS命令访问Git版本库</td></tr><tr><td>git fast-export</td><td>将提交导出为 git-fast-import 格式</td></tr><tr><td>git fast-import</td><td>其他版本库迁移至Git的通用工具</td></tr><tr><td>git svn</td><td>Git 作为前端操作 Subversion</td></tr></tbody></table><h3 id="9、合并相关的辅助命令"><a href="#9、合并相关的辅助命令" class="headerlink" title="9、合并相关的辅助命令"></a>9、合并相关的辅助命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git merge-base</td><td>供其他脚本调用，找到两个或多个提交最近的共同祖先</td></tr><tr><td>git merge-file</td><td>针对文件的两个不同版本执行三向文件合并</td></tr><tr><td>git merge-index</td><td>对index中的冲突文件调用指定的冲突解决工具</td></tr><tr><td>git merge-octopus</td><td>合并两个以上分支。参见 git merge 的octopus合并策略</td></tr><tr><td>git merge-one-file</td><td>由 git merge-index 调用的标准辅助程序</td></tr><tr><td>git merge-ours</td><td>合并使用本地版本，抛弃他人版本。参见 git merge 的ours合并策略</td></tr><tr><td>git merge-recursive</td><td>针对两个分支的三向合并。参见 git merge 的recursive合并策略</td></tr><tr><td>git merge-resolve</td><td>针对两个分支的三向合并。参见 git merge 的resolve合并策略</td></tr><tr><td>git merge-subtree</td><td>子树合并。参见 git merge 的 subtree 合并策略</td></tr><tr><td>git merge-tree</td><td>显式三向合并结果，不改变暂存区</td></tr><tr><td>git fmt-merge-msg</td><td>供执行合并操作的脚本调用，用于创建一个合并提交说明</td></tr><tr><td>git rerere</td><td>重用所记录的冲突解决方案</td></tr></tbody></table><h3 id="10、-杂项"><a href="#10、-杂项" class="headerlink" title="10、 杂项"></a>10、 杂项</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git bisect–helper</td><td>由 git bisect 命令调用，确认二分查找进度</td></tr><tr><td>git check-attr</td><td>显示某个文件是否设置了某个属性</td></tr><tr><td>git checkout-index</td><td>从暂存区拷贝文件至工作区</td></tr><tr><td>git cherry</td><td>查找没有合并到上游的提交</td></tr><tr><td>git diff-files</td><td>比较暂存区和工作区，相当于 git diff –raw</td></tr><tr><td>git diff-index</td><td>比较暂存区和版本库，相当于 git diff –cached –raw</td></tr><tr><td>git diff-tree</td><td>比较两个树对象，相当于 git diff –raw A B</td></tr><tr><td>git difftool–helper</td><td>由 git difftool 命令调用，默认要使用的差异比较工具</td></tr><tr><td>git get-tar-commit-id</td><td>从 git archive 创建的 tar 包中提取提交ID</td></tr><tr><td>git gui–askpass</td><td>命令 git gui 的获取用户口令输入界面</td></tr><tr><td>git notes</td><td>提交评论管理</td></tr><tr><td>git patch-id</td><td>补丁过滤行号和空白字符后生成补丁唯一ID</td></tr><tr><td>git quiltimport</td><td>将Quilt补丁列表应用到当前分支</td></tr><tr><td>git replace</td><td>提交替换</td></tr><tr><td>git shortlog</td><td>对 git log 的汇总输出，适合于产品发布说明</td></tr><tr><td>git stripspace</td><td>删除空行，供其他脚本调用</td></tr><tr><td>git submodule</td><td>子模组管理</td></tr><tr><td>git tar-tree</td><td>过时命令，请使用 git archive</td></tr><tr><td>git var</td><td>显示 Git 环境变量</td></tr><tr><td>git web–browse</td><td>启动浏览器以查看目录或文件</td></tr><tr><td>git whatchanged</td><td>显示提交历史及每次提交的改动</td></tr><tr><td>git-mergetool–lib</td><td>包含于其他脚本中，提供合并/差异比较工具的选择和执行</td></tr><tr><td>git-parse-remote</td><td>包含于其他脚本中，提供操作远程版本库的函数</td></tr><tr><td>git-sh-setup</td><td>包含于其他脚本中，提供 shell 编程的函数库</td></tr></tbody></table><h2 id="Git命令参考手册-文本版"><a href="#Git命令参考手册-文本版" class="headerlink" title="Git命令参考手册(文本版)"></a>Git命令参考手册(文本版)</h2><p>git init # 初始化本地git仓库（创建新仓库）<br>git config –global user.name “xxx” # 配置用户名<br>git config –global user.email “<a href="mailto:xxx@xxx.com" rel="external nofollow noreferrer">xxx@xxx.com</a>“ # 配置邮件<br>git config –global color.ui true # git status等命令自动着色<br>git config –global color.status auto<br>git config –global color.diff auto<br>git config –global color.branch auto<br>git config –global color.interactive auto<br>git clone git+ssh://git@192.168.53.168/VT.git # clone远程仓库<br>git status # 查看当前版本状态（是否修改）<br>git add xyz # 添加xyz文件至index<br>git add . # 增加当前子目录下所有更改过的文件至index<br>git commit -m ‘xxx’ # 提交<br>git commit –amend -m ‘xxx’ # 合并上一次提交（用于反复修改）<br>git commit -am ‘xxx’ # 将add和commit合为一步<br>git rm xxx # 删除index中的文件<br>git rm -r * # 递归删除<br>git log # 显示提交日志<br>git log -1 # 显示1行日志 -n为n行<br>git log -5<br>git log –stat # 显示提交日志及相关变动文件<br>git log -p -m<br>git show dfb02e6e4f2f7b573337763e5c0013802e392818 # 显示某个提交的详细内容<br>git show dfb02 # 可只用commitid的前几位<br>git show HEAD # 显示HEAD提交日志<br>git show HEAD^ # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本<br>git tag # 显示已存在的tag<br>git tag -a v2.0 -m ‘xxx’ # 增加v2.0的tag<br>git show v2.0 # 显示v2.0的日志及详细内容<br>git log v2.0 # 显示v2.0的日志<br>git diff # 显示所有未添加至index的变更<br>git diff –cached # 显示所有已添加index但还未commit的变更<br>git diff HEAD^ # 比较与上一个版本的差异<br>git diff HEAD – ./lib # 比较与HEAD版本lib目录的差异<br>git diff origin/master..master # 比较远程分支master上有本地分支master上没有的<br>git diff origin/master..master –stat # 只显示差异的文件，不显示具体内容<br>git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）<br>git branch # 显示本地分支<br>git branch –contains 50089 # 显示包含提交50089的分支<br>git branch -a # 显示所有分支<br>git branch -r # 显示所有原创分支<br>git branch –merged # 显示所有已合并到当前分支的分支<br>git branch –no-merged # 显示所有未合并到当前分支的分支<br>git branch -m master master_copy # 本地分支改名<br>git checkout -b master_copy # 从当前分支创建新分支master_copy并检出<br>git checkout -b master master_copy # 上面的完整版<br>git checkout features/performance # 检出已存在的features/performance分支<br>git checkout –track hotfixes/BJVEP933 # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支<br>git checkout v2.0 # 检出版本v2.0<br>git checkout -b devel origin/develop # 从远程分支develop创建新本地分支devel并检出<br>git checkout – README # 检出head版本的README文件（可用于修改错误回退）<br>git merge origin/master # 合并远程master分支至当前分支<br>git cherry-pick ff44785404a8e # 合并提交ff44785404a8e的修改<br>git push origin master # 将当前分支push到远程master分支<br>git push origin :hotfixes/BJVEP933 # 删除远程仓库的hotfixes/BJVEP933分支<br>git push –tags # 把所有tag推送到远程仓库<br>git fetch # 获取所有远程分支（不更新本地分支，另需merge）<br>git fetch –prune # 获取所有原创分支并清除服务器上已删掉的分支<br>git pull origin master # 获取远程分支master并merge到当前分支<br>git mv README README2 # 重命名文件README为README2<br>git reset –hard HEAD # 将当前版本重置为HEAD（通常用于merge失败回退）<br>git rebase<br>git branch -d hotfixes/BJVEP933 # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）<br>git branch -D hotfixes/BJVEP933 # 强制删除分支hotfixes/BJVEP933<br>git ls-files # 列出git index包含的文件<br>git show-branch # 图示当前分支历史<br>git show-branch –all # 图示所有分支历史<br>git whatchanged # 显示提交历史对应的文件修改<br>git revert dfb02e6e4f2f7b573337763e5c0013802e392818 # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818<br>git ls-tree HEAD # 内部命令：显示某个git对象<br>git rev-parse v2.0 # 内部命令：显示某个ref对于的SHA1 HASH<br>git reflog # 显示所有提交，包括孤立节点<br>git show HEAD@{5}<br>git show master@{yesterday} # 显示master分支昨天的状态<br>git log –pretty=format:’%h %s’ –graph # 图示提交日志<br>git show HEAD~3<br>git show -s –pretty=raw 2be7fcb476<br>git stash # 暂存当前修改，将所有至为HEAD状态<br>git stash list # 查看所有暂存<br>git stash show -p stash@{0} # 参考第一次暂存<br>git stash apply stash@{0} # 应用第一次暂存<br>git grep “delete from” # 文件中搜索文本“delete from”<br>git grep -e ‘#define’ –and -e SORT_DIRENT<br>git gc<br>git fsck</p><h2 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h2><p>如果不想使用命令行，可以使用：<br>GitHub Desktop：<a href="https://desktop.github.com/" target="_blank" rel="noopener external nofollow noreferrer">desktop.github.com/</a> 只能提交github<br>tortoisegit：<a href="https://tortoisegit.org/" target="_blank" rel="noopener external nofollow noreferrer">tortoisegit.org/</a><br>SourceTree：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener external nofollow noreferrer">www.sourcetreeapp.com/</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora使用教程</title>
    <url>/2020/02/10/Typora/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><div class="note info"><p>写Mrakdown费事？Typora让你像写Word一样行云流水，所见即所得。</p></div><img src="/2020/02/10/Typora/T.jpg" title="typora.io"><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Typora是一款轻便简洁的Markdown编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。即时渲染使得你写Markdown就想是写Word文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p><ul><li>Typora删除了预览窗口，以及所有其他不必要的干扰。取而代之的是实时预览。</li><li>Markdown的语法因不同的解析器或编辑器而异，Typora使用的是<a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/" target="_blank" rel="noopener external nofollow noreferrer">GitHub Flavored Markdown</a>。</li></ul><h2 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h2><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</p><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul><li>加粗： <code>Ctrl + B</code></li><li>标题： <code>Ctrl + H</code></li><li>插入链接： <code>Ctrl + K</code></li><li>插入代码： <code>Ctrl + Shift + C</code> – 无法执行</li><li>行内代码： <code>Ctrl + Shift + K</code></li><li>插入图片： <code>Ctrl + Shift + I</code></li><li>无序列表：<code>Ctrl + Shift + L</code> – 无法执行</li><li>撤销： <code>Ctrl + Z</code></li><li>一级标题： <code>Ctrl + 1</code> – 以此类推<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+1  一阶标题    Ctrl+B  字体加粗</span><br><span class="line">Ctrl+2  二阶标题    Ctrl+I  字体倾斜</span><br><span class="line">Ctrl+3  三阶标题    Ctrl+U  下划线</span><br><span class="line">Ctrl+4  四阶标题    Ctrl+Home   返回Typora顶部</span><br><span class="line">Ctrl+5  五阶标题    Ctrl+End    返回Typora底部</span><br><span class="line">Ctrl+6  六阶标题    Ctrl+T  创建表格</span><br><span class="line">Ctrl+L  选中某句话   Ctrl+K  创建超链接</span><br><span class="line">Ctrl+D  选中某个单词  Ctrl+F  搜索</span><br><span class="line">Ctrl+E  选中相同格式的文字   Ctrl+H  搜索并替换</span><br><span class="line">Alt+Shift+5 删除线 Ctrl+Shift+I    插入图片</span><br><span class="line">Ctrl+Shift+M    公式块 Ctrl+Shift+Q    引用</span><br><span class="line"></span><br><span class="line">注：一些实体符号需要在实体符号之前加”\”才能够显示</span><br></pre></td></tr></table></figure></li></ul><p>在markdown中，段落由多个空格分隔。在Typora中，只需回车即可创建新段落。</p><h3 id="标题级别"><a href="#标题级别" class="headerlink" title="标题级别"></a>标题级别</h3><p># 一级标题 快捷键为 Ctrl + 1<br>## 二级标题 快捷键为 Ctrl + 2<br>……<br>###### 六级标题 快捷键为 Ctrl + 6</p><h3 id="引用文字"><a href="#引用文字" class="headerlink" title="引用文字"></a>引用文字</h3><p>&gt; + 空格 + 引用文字</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用 * + - 都可以创建一个无序列表</p><ul><li>AAA</li><li>BBB</li><li>CCC<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3>使用 1. 2. 3. 创建有序列表</li></ul><ol><li>AAA</li><li>BBB</li><li>CCC<h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3>-[ ] 不勾选<br>-[x] 勾选<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3>在Typora中插入程序代码的方式有两种：使用反引号 `（~ 键）、使用缩进（Tab）。</li></ol><ul><li>插入行内代码，即插入一个单词或者一句代码的情况，使用 <code>code</code> 这样的形式插入。</li><li>插入多行代码输入3个反引号（`） + 回车，并在后面选择一个语言名称即可实现语法高亮。<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">helloworld</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"hello, world!"</span>)</span><br></pre></td></tr></table></figure><h3 id="数学表达式"><a href="#数学表达式" class="headerlink" title="数学表达式"></a>数学表达式</h3>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。根据需要加载 Mathjax 对数学公式进行渲染。<br>按下 <code>$$</code>，然后按下回车键，即可进行数学公式的编辑。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1\times\mathbf&#123;V&#125;_</span>2 = \mathbf&#123;X&#125;_3</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h3 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h3>输入 <code>| 表头1 | 表头2 |</code>并回车。即可创建一个包含2列表。快捷键 <code>Ctrl + T</code>弹出对话框。<table><thead><tr><th align="center">id</th><th align="center">name</th></tr></thead><tbody><tr><td align="center">No.1</td><td align="center">胡凯</td></tr></tbody></table></li><li>不管是哪种方式，第一行为表头，第二行为分割表头和主体部分，第三行开始每一行为一个表格行</li><li>列与列之间用管道符号<code>|</code> 隔开</li><li>还可设置对齐方式(表头与内容之间)，如果不使用对齐标记，内容默认左对齐，表头居中对齐<ul><li>左对齐 ：|</li><li>右对齐 |：</li><li>中对齐 ：|：</li></ul></li><li>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 | 来标记单元格边界</li><li>为了使 Markdown 更清晰，| 和 - 两侧需要至少有一个空格（最左侧和最右侧的 | 外就不需要了）。</li></ul><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>这个例子的脚注为<a href="https://www.cnblogs.com/hider/p/11614688.html#fn1" target="_blank" rel="noopener external nofollow noreferrer">1</a>。<br>注意：该例子脚注标识是1，脚注标识可以为字母数字下划线，但是暂不支持中文。脚注内容可为任意字符，包括中文。</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>输入 <code>***</code> 或者 <code>---</code> 再按回车即可绘制一条水平线，如下：</p><hr><h3 id="目录（TOC）"><a href="#目录（TOC）" class="headerlink" title="目录（TOC）"></a>目录（TOC）</h3><p>输入 <code>[ toc ]</code> 然后回车，即可创建一个“目录”。TOC从文档中提取所有标题，其内容将自动更新。</p><blockquote><p>Typora支持TOC自动生成目录，博客园不支持？</p></blockquote><h2 id="跨度元素"><a href="#跨度元素" class="headerlink" title="跨度元素"></a>跨度元素</h2><p>跨度元素即图片，网址，视频等，在Typora中输入后，会立即载入并呈现。</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h4><p>这是一个带有标题属性的 <code>[链接](http://example.com/ &quot;标题&quot;)</code><br>这是一个没有标题属性的 <code>[链接](http://example.net/)</code><br><a href="http://example.com/" target="_blank" rel="noopener external nofollow noreferrer">链接</a><br><a href="http://example.net/" target="_blank" rel="noopener external nofollow noreferrer">链接</a></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p>这是一个[参考链接]id – 无法执行</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><p>Typora允许用&lt;括号括起来&gt;, 把URL作为链接插入。<br>Typora还会自动链接标准网址。<br><a href="http://www.baidu.com" target="_blank" rel="noopener external nofollow noreferrer">www.baidu.com</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png &quot;图片标题&quot;)</span><br><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png)</span><br></pre></td></tr></table></figure><p>除了以上2种方式之外，还可以直接将图片拖拽进来，自动生成链接。</p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>使用 <code>*单个星号*</code> 或者 <code>_单下划线_</code> 可以字体倾斜。快捷键 <code>Ctrl + I</code><br><em>斜体</em></p><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p>使用 <code>**两个星号**</code> 或者 <code>__两个下划线__</code> 可以字体加粗。快捷键 <code>Ctrl + B</code><br><strong>加粗</strong></p><h3 id="加粗斜体"><a href="#加粗斜体" class="headerlink" title="加粗斜体"></a>加粗斜体</h3><p>使用<code>***加粗斜体***</code>可以加粗斜体。<br><strong><em>加粗斜体\</em></strong></p><h3 id="代码标记"><a href="#代码标记" class="headerlink" title="代码标记"></a>代码标记</h3><p>标记代码使用反引号，即在英文输入法下，ESC键下面和1键左边的符号。</p><blockquote><p>使用该 <code>printf()</code>功能</p></blockquote><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用<code>~~删除线~~</code> 快捷键 <code>Alt + Shift + 5</code><br><del>删除线</del></p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>\下划线 – 无法执行<br>参考另一篇文章，可执行。<br>通过<code>下划线的内容</code> 或者 快捷键<code>Ctrl + U</code>可实现下划线<br>下划线的内容</p><h3 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h3><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。<br>:smile – 无法显示<br>😺</p><h3 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h3><p>可以使用 <code>文本</code>实现下标。<br>(需在设置中打开该功能)<br>H<del>2</del>O<br>H2O</p><h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><p>可以使用<code>文本</code>实现上标。<br>(需在设置中打开该功能)<br>X^2^<br>X2</p><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p><code>==高亮==</code>(需在设置中打开该功能)<br>==我是最重要的==</p><h3 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h3><p>使用 <code>这是要居中的内容</code>可以使文本居中<br>这是要居中的文本内容</p><h3 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h3><p>使用 <code>空格 + 空格 + Enter</code>可以实现换行，例如：<br>或者可以使用<code></code>实现换行。</p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：<br><strong>文本加粗</strong><br>** 正常显示星号 **<br>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">&#96;   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>支持HTML<br>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<code></code>等 ，如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 重启电脑</span><br><span class="line">&lt;kbd&gt; &lt;&#x2F;kbd&gt; -- 白色框框</span><br></pre></td></tr></table></figure><p>效果：<br>使用 Ctrl+Alt+Del 重启电脑</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>建议打开大纲视图<code>Ctrl + Shift + 1</code></li><li>插入表格需要顶格写，否则无法显示</li><li>语法无须刻意记忆，右键可查询</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>代码神器：拒绝重复编码，这款IDEA插件了解一下</title>
    <url>/2020/02/09/easycode/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Wed Mar 04 2020 20:45:27 GMT+0800 (GMT+08:00) --><p>Easycode是IDEA的一个插件，可以直接对数据的表生成entity、controller、service、dao、mapper无需任何编码，简单而强大。</p><h2 id="1、安装（Easy-Code"><a href="#1、安装（Easy-Code" class="headerlink" title="1、安装（Easy Code)"></a>1、安装（Easy Code)</h2><img src="/2020/02/09/easycode/Easy_Code.jpg" title="Install Easy_Code"><a id="more"></a><p>待装好之后，推荐大家可以安装一个插件，叫做Lombok。</p><img src="/2020/02/09/easycode/Lombok.png" title="Install Lombook"><p>Lombok能通过注解的方式，在编译时自动为属性生成构造器、getter/setter、equals、hashcode、toString方法。出现的神奇就是在源码中没有getter和setter方法，但是在编译生成的字节码文件中有getter和setter方法。</p><h2 id="2、建立数据库"><a href="#2、建立数据库" class="headerlink" title="2、建立数据库"></a>2、建立数据库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS &#96;user&#96;;</span><br><span class="line">CREATE TABLE &#96;user&#96; (</span><br><span class="line">  &#96;id&#96; int(11) NOT NULL,</span><br><span class="line">  &#96;username&#96; varchar(20) DEFAULT NULL,</span><br><span class="line">  &#96;sex&#96; varchar(6) DEFAULT NULL,</span><br><span class="line">  &#96;birthday&#96; date DEFAULT NULL,</span><br><span class="line">  &#96;address&#96; varchar(20) DEFAULT NULL,</span><br><span class="line">  &#96;password&#96; varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line">SET FOREIGN_KEY_CHECKS &#x3D; 1;</span><br></pre></td></tr></table></figure><img src="/2020/02/09/easycode/Mysql.png" title="Create Database"><h2 id="3、在IDEA配置连接数据库"><a href="#3、在IDEA配置连接数据库" class="headerlink" title="3、在IDEA配置连接数据库"></a>3、在IDEA配置连接数据库</h2><p>在这之前，新建一个Springboot项目，这个应该是比较简单的。</p><p>建好SpringBoot项目之后，如下图所示，找到这个Database</p><img src="/2020/02/09/easycode/Database.png" title="This is an example image"><p>​ 然后填写数据库名字，用户名，密码。点击OK即可。这样的话，IDEA连接数据库就完事了。</p><p>​ 如果你在连接Mysql时，在地址，用户名，密码，数据库名，全配置好了，点击测试连接，咔！爆红！</p><img src="/2020/02/09/easycode/Localhost.png" title="Connection MySql"><p>这段错误信息翻译过来就是：服务器返回无效时区。进入“高级”选项卡，手动设置“serverTimezone”属性。</p><p>出现这个问题，一般原因在两个方面，第一，最基本的你Mysql驱动版本可能有问题，第二，设置mysql时区。</p><p>为什么时区会错误呢，那是因为Mysql默认的时区时UTC时区，比北京时间晚8个小时，所以我们要修改mysql的时长，首先我们先来检查下mysql的时区，前提是你安装mysql时配置好了系统环境变量。</p><p>如果你配置好了环境变量，那么就可以在命令窗口直接执行下面的命令啦！</p><p>1.进入命令窗口(Win+R),连接本地数据库 mysql -hlocalhost -uroot -p; ,回车，输入密码图：</p><p>2.继续输入 show variables like ‘%time_zone’;(注意不要漏掉后面的分号)，回车，如果现实 SYSTEM就是没有设置时区。</p><img src="/2020/02/09/easycode/CMD.png" title="Set the time zone"><p>3.现在我们来设置时区。</p><p>输入set globaltime_zone=‘+8:00’，回车，如图：</p><img src="/2020/02/09/easycode/Time_zone.png" title="Signs of success"><p>这便是设置成功啦！</p><p>这时你可以重新连接下数据库，如果成功，那么接着往下走！</p><img src="/2020/02/09/easycode/Test_Con.png" title="Reconnection"><h2 id="4-开始生成代码"><a href="#4-开始生成代码" class="headerlink" title="4.开始生成代码"></a>4.开始生成代码</h2><p>在这个你IDEA连接中找到你想生成的表，然后右键，就会出现如下所示的截图。</p><img src="/2020/02/09/easycode/Code.png" title="Reverse generated"><p>选择你要将生成的代码放入哪个文件夹中，选择完以后点击OK即可。</p><img src="/2020/02/09/easycode/Generate_Code.png" title="Select folder"><p>这样的话就完成了代码的生成了，生成的代码如下图所示：</p><img src="/2020/02/09/easycode/Coding.png" title="Select folder"><h2 id="5-pom-xml"><a href="#5-pom-xml" class="headerlink" title="5.pom.xml"></a>5.pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--热部署--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> <span class="comment">&lt;!-- 这个需要为 true 热部署才有效 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--阿里巴巴连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-Application-yml"><a href="#6-Application-yml" class="headerlink" title="6.Application.yml"></a>6.Application.yml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8089</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/easycode?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*Dao.xml</span></span><br><span class="line">  <span class="attr">typeAliasesPackage:</span> <span class="string">com.easycode.demo.entity</span></span><br></pre></td></tr></table></figure><h2 id="7-启动项目"><a href="#7-启动项目" class="headerlink" title="7.启动项目"></a>7.启动项目</h2><p>在启动项目之前，我们需要修改两个地方。</p><p>在Dao层加上@Mapper注解</p><img src="/2020/02/09/easycode/Mapper.png" title="Mapper"><p>在启动类里面加上@MapperScan(“com.easycode.demo.dao”)</p><img src="/2020/02/09/easycode/Springboot.png" title="Springboot Runner"><p>启动项目 测试一下</p><p>EasyCode的用法就介绍到这里了，觉得有用的自己可以尝试一下~</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Easycode</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
</search>
