<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用Windows10内置PowerShell连接虚拟机Linux系统</title>
    <url>/2020/02/24/%E4%BD%BF%E7%94%A8Windows10%E5%86%85%E7%BD%AEPowerShell%E8%BF%9E%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BALinux%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info"><p>为了学习和使用Linux，多数人选择了使用虚拟机的方式来安装Linux。</p></div>虚拟机的选择可以参考：<a href="https://www.10besty.com/best-virtual-machine-applications/" target="_blank" rel="noopener external nofollow noreferrer"> 2020年最好的虚拟机测评推荐</a><p>​我之前使用的<a href="https://store.vmware.com/store?Action=home&amp;Env=BASE&amp;Locale=zh_CN&amp;SiteID=vmware" target="_blank" rel="noopener external nofollow noreferrer">VMware Workstation Pro</a>，但是因为体积大需要激活码注册，所以我现在现阶段选择使用的是Virtualbox，轻量级并且免费，功能方面成熟也齐全。VirtualBox提供了多种网络连接方式，不同的网络连接方式决定了虚拟机是否可以联网，以及是否可以和宿主机互相ping通。本文将主要介绍常用的桥接、NAT和host-only三种网络连接方式的区别，以减少大家在使用中的困扰。</p><a id="more"></a><h4 id="一、不同网络连接方式对网络影响简介"><a href="#一、不同网络连接方式对网络影响简介" class="headerlink" title="一、不同网络连接方式对网络影响简介"></a>一、不同网络连接方式对网络影响简介</h4><table><thead><tr><th></th><th>桥接</th><th>NAT</th><th>host-only</th></tr></thead><tbody><tr><td>虚拟机与宿主机</td><td>彼此互通，处于同一网段</td><td>虚拟机能访问宿主机；宿主机不能访问虚拟机</td><td>虚拟机不能访问宿主机；宿主机能访问虚拟机</td></tr><tr><td>虚拟机与虚拟机</td><td>彼此互通，处于同一网段</td><td>彼此不通</td><td>彼此互通，处于同一网段</td></tr><tr><td>虚拟机与其他主机</td><td>彼此互通，处于同一网段</td><td>虚拟机能访问其他主机；其他主机不能访问虚拟机</td><td>彼此不通；需要设置</td></tr><tr><td>虚拟机与互联网</td><td>虚拟机可以上网</td><td>虚拟机可以上网</td><td>彼此不通；需要设置</td></tr></tbody></table><h4 id="二、virtualbox视图快捷键说明"><a href="#二、virtualbox视图快捷键说明" class="headerlink" title="二、virtualbox视图快捷键说明"></a>二、virtualbox视图快捷键说明</h4><p>刚才因为无意触碰到全屏模式导致整个页面分辨率都模糊难触控，搜了半天才退出，记录下：<br>首先说明一下，Virtualbox中默认的host键是右ctrl，调出快捷菜单的组合键是host+home，这个请记住，因为在有的显示模式下是不显示菜单的。<br>‘视图’菜单下共有5个选项，分别是：</p><ul><li><p>切换到全屏模式 HOST+F</p></li><li><p>切换到无缝模式 HOST+L</p></li><li><p>切换到自动缩放模式 HOST+C</p></li><li><p>自动调整显示尺寸 HOST+G</p></li><li><p>自动调整窗口大小 HOST+A</p></li></ul><p>每个选项前都有个小图标，如果小图标上显示一个对号，意思就是打开了这个选项。注意无缝模式和自动调整显示尺寸需要guest additions支持，所以非windows的虚拟机里这两个选项是灰色的。</p><!-- rebuild by neat --><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 8</title>
    <url>/2020/02/22/CentOS8/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Welcome to my blog,enter password to read</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="09f1c1b7f16581e592b8b7ea9e328cb0185dfa8279561f75732c9e4962edc1bd"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>git使用教程</title>
    <url>/2020/02/15/Git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info"><p>由于最近使用Hexo+GitPage搭建博客 使用Git命令比较多 故将Git使用方法写一篇总结。</p></div><a id="more"></a><p><strong>一、 Git 常用命令速查</strong></p><p>git branch 查看本地所有分支<br>git status 查看当前状态<br>git commit 提交<br>git branch -a 查看所有的分支<br>git branch -r 查看远程所有分支<br>git commit -am “init” 提交并且加注释<br>git remote add origin <a href="mailto:git@192.168.1.119" rel="external nofollow noreferrer">git@192.168.1.119</a>:ndshow<br>git push origin master 将文件给推到服务器上<br>git remote show origin 显示远程库origin里的资源<br>git push origin master:develop<br>git push origin master:hb-dev 将本地库与服务器上的库进行关联<br>git checkout –track origin/dev 切换到远程dev分支<br>git branch -D master develop 删除本地库develop<br>git checkout -b dev 建立一个新的本地分支dev<br>git merge origin/dev 将分支dev与当前分支进行合并<br>git checkout dev 切换到本地dev分支<br>git remote show 查看远程库<br>git add .<br>git rm 文件名(包括路径) 从git中删除指定文件<br>git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来<br>git config –list 看所有用户<br>git ls-files 看已经被提交的<br>git rm [file name] 删除一个文件<br>git commit -a 提交当前repos的所有的改变<br>git add [file name] 添加一个文件到git index<br>git commit -v 当你用－v参数的时候可以看commit的差异<br>git commit -m “This is the message describing the commit” 添加commit信息<br>git commit -a -a是代表add，把所有的change加到git index里然后再commit<br>git commit -a -v 一般提交命令<br>git log 看你commit的日志<br>git diff 查看尚未暂存的更新<br>git rm a.a 移除文件(从暂存区和工作区中删除)<br>git rm –cached a.a 移除文件(只从暂存区中删除)<br>git commit -m “remove” 移除文件(从Git中删除)<br>git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)<br>git diff –cached 或 $ git diff –staged 查看尚未提交的更新<br>git stash push 将文件给push到一个临时空间中<br>git stash pop 将文件从临时空间pop下来<br>-——————————————————–<br>git remote add origin <a href="mailto:git@github.com" rel="external nofollow noreferrer">git@github.com</a>:username/Hello-World.git<br>git push origin master 将本地项目给提交到服务器中<br>-———————————————————-<br>git pull 本地与服务器端同步<br>-—————————————————————-<br>git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。<br>git push origin serverfix:awesomebranch<br>-—————————————————————–<br>git fetch 相当于是从远程获取最新版本到本地，不会自动merge<br>git commit -a -m “log_message” (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：<br>git branch branch_0.1 master 从主分支master创建branch_0.1分支<br>git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0<br>git checkout branch_1.0/master 切换到branch_1.0/master分支<br>du -hs</p><p>git branch 删除远程branch<br>git push origin :branch_remote_name<br>git branch -r -d branch_remote_name<br>-———————————————————-</p><p>初始化版本库，并提交到远程服务器端<br>mkdir WebApp<br>cd WebApp<br>git init 本地初始化<br>touch README<br>git add README 添加文件<br>git commit -m ‘first commit’<br>git remote add origin <a href="mailto:git@github.com" rel="external nofollow noreferrer">git@github.com</a>:daixu/WebApp.git</p><p>增加一个远程服务器端</p><p>上面的命令会增加URL地址为‘git@github.com:daixu/WebApp.git’，名称为origin的远程服务器库，以后提交代码的时候只需要使用 origin别名即可</p><h2 id="二、-Git-命令速查表"><a href="#二、-Git-命令速查表" class="headerlink" title="二、 Git 命令速查表"></a><strong>二、 Git 命令速查表</strong></h2><h3 id="1、常用的Git命令"><a href="#1、常用的Git命令" class="headerlink" title="1、常用的Git命令"></a>1、常用的Git命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git add</td><td>添加至暂存区</td></tr><tr><td>git add–interactive</td><td>交互式添加</td></tr><tr><td>git apply</td><td>应用补丁</td></tr><tr><td>git am</td><td>应用邮件格式补丁</td></tr><tr><td>git annotate</td><td>同义词，等同于 git blame</td></tr><tr><td>git archive</td><td>文件归档打包</td></tr><tr><td>git bisect</td><td>二分查找</td></tr><tr><td>git blame</td><td>文件逐行追溯</td></tr><tr><td>git branch</td><td>分支管理</td></tr><tr><td>git cat-file</td><td>版本库对象研究工具</td></tr><tr><td>git checkout</td><td>检出到工作区、切换或创建分支</td></tr><tr><td>git cherry-pick</td><td>提交拣选</td></tr><tr><td>git citool</td><td>图形化提交，相当于 git gui 命令</td></tr><tr><td>git clean</td><td>清除工作区未跟踪文件</td></tr><tr><td>git clone</td><td>克隆版本库</td></tr><tr><td>git commit</td><td>提交</td></tr><tr><td>git config</td><td>查询和修改配置</td></tr><tr><td>git describe</td><td>通过里程碑直观地显示提交ID</td></tr><tr><td>git diff</td><td>差异比较</td></tr><tr><td>git difftool</td><td>调用图形化差异比较工具</td></tr><tr><td>git fetch</td><td>获取远程版本库的提交</td></tr><tr><td>git format-patch</td><td>创建邮件格式的补丁文件。参见 git am 命令</td></tr><tr><td>git grep</td><td>文件内容搜索定位工具</td></tr><tr><td>git gui</td><td>基于Tcl/Tk的图形化工具，侧重提交等操作</td></tr><tr><td>git help</td><td>帮助</td></tr><tr><td>git init</td><td>版本库初始化</td></tr><tr><td>git init-db*</td><td>同义词，等同于 git init</td></tr><tr><td>git log</td><td>显示提交日志</td></tr><tr><td>git merge</td><td>分支合并</td></tr><tr><td>git mergetool</td><td>图形化冲突解决</td></tr><tr><td>git mv</td><td>重命名</td></tr><tr><td>git pull</td><td>拉回远程版本库的提交</td></tr><tr><td>git push</td><td>推送至远程版本库</td></tr><tr><td>git rebase</td><td>分支变基</td></tr><tr><td>git rebase–interactive</td><td>交互式分支变基</td></tr><tr><td>git reflog</td><td>分支等引用变更记录管理</td></tr><tr><td>git remote</td><td>远程版本库管理</td></tr><tr><td>git repo-config*</td><td>同义词，等同于 git config</td></tr><tr><td>git reset</td><td>重置改变分支“游标”指向</td></tr><tr><td>git rev-parse</td><td>将各种引用表示法转换为哈希值等</td></tr><tr><td>git revert</td><td>反转提交</td></tr><tr><td>git rm</td><td>删除文件</td></tr><tr><td>git show</td><td>显示各种类型的对象</td></tr><tr><td>git stage*</td><td>同义词，等同于 git add</td></tr><tr><td>git stash</td><td>保存和恢复进度</td></tr><tr><td>git status</td><td>显示工作区文件状态</td></tr><tr><td>git tag</td><td>里程碑管理</td></tr></tbody></table><h3 id="2、对象库操作相关命令"><a href="#2、对象库操作相关命令" class="headerlink" title="2、对象库操作相关命令"></a>2、对象库操作相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git commit-tree</td><td>从树对象创建提交</td></tr><tr><td>git hash-object</td><td>从标准输入或文件计算哈希值或创建对象</td></tr><tr><td>git ls-files</td><td>显示工作区和暂存区文件</td></tr><tr><td>git ls-tree</td><td>显示树对象包含的文件</td></tr><tr><td>git mktag</td><td>读取标准输入创建一个里程碑对象</td></tr><tr><td>git mktree</td><td>读取标准输入创建一个树对象</td></tr><tr><td>git read-tree</td><td>读取树对象到暂存区</td></tr><tr><td>git update-index</td><td>工作区内容注册到暂存区及暂存区管理</td></tr><tr><td>git unpack-file</td><td>创建临时文件包含指定 blob 的内容</td></tr><tr><td>git write-tree</td><td>从暂存区创建一个树对象</td></tr></tbody></table><h3 id="3、引用操作相关命令"><a href="#3、引用操作相关命令" class="headerlink" title="3、引用操作相关命令"></a>3、引用操作相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git check-ref-format</td><td>检查引用名称是否符合规范</td></tr><tr><td>git for-each-ref</td><td>引用迭代器，用于shell编程</td></tr><tr><td>git ls-remote</td><td>显示远程版本库的引用</td></tr><tr><td>git name-rev</td><td>将提交ID显示为友好名称</td></tr><tr><td>git peek-remote*</td><td>过时命令，请使用 git ls-remote</td></tr><tr><td>git rev-list</td><td>显示版本范围</td></tr><tr><td>git show-branch</td><td>显示分支列表及拓扑关系</td></tr><tr><td>git show-ref</td><td>显示本地引用</td></tr><tr><td>git symbolic-ref</td><td>显示或者设置符号引用</td></tr><tr><td>git update-ref</td><td>更新引用的指向</td></tr><tr><td>git verify-tag</td><td>校验 GPG 签名的Tag</td></tr></tbody></table><h3 id="4、版本库管理相关命令"><a href="#4、版本库管理相关命令" class="headerlink" title="4、版本库管理相关命令"></a>4、版本库管理相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git count-objects</td><td>显示松散对象的数量和磁盘占用</td></tr><tr><td>git filter-branch</td><td>版本库重构</td></tr><tr><td>git fsck</td><td>对象库完整性检查</td></tr><tr><td>git fsck-objects*</td><td>同义词，等同于 git fsck</td></tr><tr><td>git gc</td><td>版本库存储优化</td></tr><tr><td>git index-pack</td><td>从打包文件创建对应的索引文件</td></tr><tr><td>git lost-found*</td><td>过时，请使用 git fsck –lost-found 命令</td></tr><tr><td>git pack-objects</td><td>从标准输入读入对象ID，打包到文件</td></tr><tr><td>git pack-redundant</td><td>查找多余的 pack 文件</td></tr><tr><td>git pack-refs</td><td>将引用打包到 .git/packed-refs 文件中</td></tr><tr><td>git prune</td><td>从对象库删除过期对象</td></tr><tr><td>git prune-packed</td><td>将已经打包的松散对象删除</td></tr><tr><td>git relink</td><td>为本地版本库中相同的对象建立硬连接</td></tr><tr><td>git repack</td><td>将版本库未打包的松散对象打包</td></tr><tr><td>git show-index</td><td>读取包的索引文件，显示打包文件中的内容</td></tr><tr><td>git unpack-objects</td><td>从打包文件释放文件</td></tr><tr><td>git verify-pack</td><td>校验对象库打包文件</td></tr></tbody></table><h3 id="5、数据传输相关命令"><a href="#5、数据传输相关命令" class="headerlink" title="5、数据传输相关命令"></a>5、数据传输相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git fetch-pack</td><td>执行 git fetch 或 git pull 命令时在本地执行此命令，用于从其他版本库获取缺失的对象</td></tr><tr><td>git receive-pack</td><td>执行 git push 命令时在远程执行的命令，用于接受推送的数据</td></tr><tr><td>git send-pack</td><td>执行 git push 命令时在本地执行的命令，用于向其他版本库推送数据</td></tr><tr><td>git upload-archive</td><td>执行 git archive –remote 命令基于远程版本库创建归档时，远程版本库执行此命令传送归档</td></tr><tr><td>git upload-pack</td><td>执行 git fetch 或 git pull 命令时在远程执行此命令，将对象打包、上传</td></tr></tbody></table><h3 id="6、邮件相关命令"><a href="#6、邮件相关命令" class="headerlink" title="6、邮件相关命令"></a>6、邮件相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git imap-send</td><td>将补丁通过 IMAP 发送</td></tr><tr><td>git mailinfo</td><td>从邮件导出提交说明和补丁</td></tr><tr><td>git mailsplit</td><td>将 mbox 或 Maildir 格式邮箱中邮件逐一提取为文件</td></tr><tr><td>git request-pull</td><td>创建包含提交间差异和执行PULL操作地址的信息</td></tr><tr><td>git send-email</td><td>发送邮件</td></tr></tbody></table><h3 id="7、协议相关命令"><a href="#7、协议相关命令" class="headerlink" title="7、协议相关命令"></a>7、协议相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git daemon</td><td>实现Git协议</td></tr><tr><td>git http-backend</td><td>实现HTTP协议的CGI程序，支持智能HTTP协议</td></tr><tr><td>git instaweb</td><td>即时启动浏览器通过 gitweb 浏览当前版本库</td></tr><tr><td>git shell</td><td>受限制的shell，提供仅执行Git命令的SSH访问</td></tr><tr><td>git update-server-info</td><td>更新哑协议需要的辅助文件</td></tr><tr><td>git http-fetch</td><td>通过HTTP协议获取版本库</td></tr><tr><td>git http-push</td><td>通过HTTP/DAV协议推送</td></tr><tr><td>git remote-ext</td><td>由Git命令调用，通过外部命令提供扩展协议支持</td></tr><tr><td>git remote-fd</td><td>由Git命令调用，使用文件描述符作为协议接口</td></tr><tr><td>git remote-ftp</td><td>由Git命令调用，提供对FTP协议的支持</td></tr><tr><td>git remote-ftps</td><td>由Git命令调用，提供对FTPS协议的支持</td></tr><tr><td>git remote-http</td><td>由Git命令调用，提供对HTTP协议的支持</td></tr><tr><td>git remote-https</td><td>由Git命令调用，提供对HTTPS协议的支持</td></tr><tr><td>git remote-testgit</td><td>协议扩展示例脚本</td></tr></tbody></table><h3 id="8、版本库转换和交互相关命令"><a href="#8、版本库转换和交互相关命令" class="headerlink" title="8、版本库转换和交互相关命令"></a>8、版本库转换和交互相关命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git archimport</td><td>导入Arch版本库到Git</td></tr><tr><td>git bundle</td><td>提交打包和解包，以便在不同版本库间传递</td></tr><tr><td>git cvsexportcommit</td><td>将Git的一个提交作为一个CVS检出</td></tr><tr><td>git cvsimport</td><td>导入CVS版本库到Git。或者使用 cvs2git</td></tr><tr><td>git cvsserver</td><td>Git的CVS协议模拟器，可供CVS命令访问Git版本库</td></tr><tr><td>git fast-export</td><td>将提交导出为 git-fast-import 格式</td></tr><tr><td>git fast-import</td><td>其他版本库迁移至Git的通用工具</td></tr><tr><td>git svn</td><td>Git 作为前端操作 Subversion</td></tr></tbody></table><h3 id="9、合并相关的辅助命令"><a href="#9、合并相关的辅助命令" class="headerlink" title="9、合并相关的辅助命令"></a>9、合并相关的辅助命令</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git merge-base</td><td>供其他脚本调用，找到两个或多个提交最近的共同祖先</td></tr><tr><td>git merge-file</td><td>针对文件的两个不同版本执行三向文件合并</td></tr><tr><td>git merge-index</td><td>对index中的冲突文件调用指定的冲突解决工具</td></tr><tr><td>git merge-octopus</td><td>合并两个以上分支。参见 git merge 的octopus合并策略</td></tr><tr><td>git merge-one-file</td><td>由 git merge-index 调用的标准辅助程序</td></tr><tr><td>git merge-ours</td><td>合并使用本地版本，抛弃他人版本。参见 git merge 的ours合并策略</td></tr><tr><td>git merge-recursive</td><td>针对两个分支的三向合并。参见 git merge 的recursive合并策略</td></tr><tr><td>git merge-resolve</td><td>针对两个分支的三向合并。参见 git merge 的resolve合并策略</td></tr><tr><td>git merge-subtree</td><td>子树合并。参见 git merge 的 subtree 合并策略</td></tr><tr><td>git merge-tree</td><td>显式三向合并结果，不改变暂存区</td></tr><tr><td>git fmt-merge-msg</td><td>供执行合并操作的脚本调用，用于创建一个合并提交说明</td></tr><tr><td>git rerere</td><td>重用所记录的冲突解决方案</td></tr></tbody></table><h3 id="10、-杂项"><a href="#10、-杂项" class="headerlink" title="10、 杂项"></a>10、 杂项</h3><table><thead><tr><th><strong><em>\</em>命令**</strong></th><th><strong><em>\</em>简要说明**</strong></th></tr></thead><tbody><tr><td>git bisect–helper</td><td>由 git bisect 命令调用，确认二分查找进度</td></tr><tr><td>git check-attr</td><td>显示某个文件是否设置了某个属性</td></tr><tr><td>git checkout-index</td><td>从暂存区拷贝文件至工作区</td></tr><tr><td>git cherry</td><td>查找没有合并到上游的提交</td></tr><tr><td>git diff-files</td><td>比较暂存区和工作区，相当于 git diff –raw</td></tr><tr><td>git diff-index</td><td>比较暂存区和版本库，相当于 git diff –cached –raw</td></tr><tr><td>git diff-tree</td><td>比较两个树对象，相当于 git diff –raw A B</td></tr><tr><td>git difftool–helper</td><td>由 git difftool 命令调用，默认要使用的差异比较工具</td></tr><tr><td>git get-tar-commit-id</td><td>从 git archive 创建的 tar 包中提取提交ID</td></tr><tr><td>git gui–askpass</td><td>命令 git gui 的获取用户口令输入界面</td></tr><tr><td>git notes</td><td>提交评论管理</td></tr><tr><td>git patch-id</td><td>补丁过滤行号和空白字符后生成补丁唯一ID</td></tr><tr><td>git quiltimport</td><td>将Quilt补丁列表应用到当前分支</td></tr><tr><td>git replace</td><td>提交替换</td></tr><tr><td>git shortlog</td><td>对 git log 的汇总输出，适合于产品发布说明</td></tr><tr><td>git stripspace</td><td>删除空行，供其他脚本调用</td></tr><tr><td>git submodule</td><td>子模组管理</td></tr><tr><td>git tar-tree</td><td>过时命令，请使用 git archive</td></tr><tr><td>git var</td><td>显示 Git 环境变量</td></tr><tr><td>git web–browse</td><td>启动浏览器以查看目录或文件</td></tr><tr><td>git whatchanged</td><td>显示提交历史及每次提交的改动</td></tr><tr><td>git-mergetool–lib</td><td>包含于其他脚本中，提供合并/差异比较工具的选择和执行</td></tr><tr><td>git-parse-remote</td><td>包含于其他脚本中，提供操作远程版本库的函数</td></tr><tr><td>git-sh-setup</td><td>包含于其他脚本中，提供 shell 编程的函数库</td></tr></tbody></table><h2 id="Git命令参考手册-文本版"><a href="#Git命令参考手册-文本版" class="headerlink" title="Git命令参考手册(文本版)"></a>Git命令参考手册(文本版)</h2><p>git init # 初始化本地git仓库（创建新仓库）<br>git config –global user.name “xxx” # 配置用户名<br>git config –global user.email “<a href="mailto:xxx@xxx.com" rel="external nofollow noreferrer">xxx@xxx.com</a>“ # 配置邮件<br>git config –global color.ui true # git status等命令自动着色<br>git config –global color.status auto<br>git config –global color.diff auto<br>git config –global color.branch auto<br>git config –global color.interactive auto<br>git clone git+ssh://git@192.168.53.168/VT.git # clone远程仓库<br>git status # 查看当前版本状态（是否修改）<br>git add xyz # 添加xyz文件至index<br>git add . # 增加当前子目录下所有更改过的文件至index<br>git commit -m ‘xxx’ # 提交<br>git commit –amend -m ‘xxx’ # 合并上一次提交（用于反复修改）<br>git commit -am ‘xxx’ # 将add和commit合为一步<br>git rm xxx # 删除index中的文件<br>git rm -r * # 递归删除<br>git log # 显示提交日志<br>git log -1 # 显示1行日志 -n为n行<br>git log -5<br>git log –stat # 显示提交日志及相关变动文件<br>git log -p -m<br>git show dfb02e6e4f2f7b573337763e5c0013802e392818 # 显示某个提交的详细内容<br>git show dfb02 # 可只用commitid的前几位<br>git show HEAD # 显示HEAD提交日志<br>git show HEAD^ # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本<br>git tag # 显示已存在的tag<br>git tag -a v2.0 -m ‘xxx’ # 增加v2.0的tag<br>git show v2.0 # 显示v2.0的日志及详细内容<br>git log v2.0 # 显示v2.0的日志<br>git diff # 显示所有未添加至index的变更<br>git diff –cached # 显示所有已添加index但还未commit的变更<br>git diff HEAD^ # 比较与上一个版本的差异<br>git diff HEAD – ./lib # 比较与HEAD版本lib目录的差异<br>git diff origin/master..master # 比较远程分支master上有本地分支master上没有的<br>git diff origin/master..master –stat # 只显示差异的文件，不显示具体内容<br>git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）<br>git branch # 显示本地分支<br>git branch –contains 50089 # 显示包含提交50089的分支<br>git branch -a # 显示所有分支<br>git branch -r # 显示所有原创分支<br>git branch –merged # 显示所有已合并到当前分支的分支<br>git branch –no-merged # 显示所有未合并到当前分支的分支<br>git branch -m master master_copy # 本地分支改名<br>git checkout -b master_copy # 从当前分支创建新分支master_copy并检出<br>git checkout -b master master_copy # 上面的完整版<br>git checkout features/performance # 检出已存在的features/performance分支<br>git checkout –track hotfixes/BJVEP933 # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支<br>git checkout v2.0 # 检出版本v2.0<br>git checkout -b devel origin/develop # 从远程分支develop创建新本地分支devel并检出<br>git checkout – README # 检出head版本的README文件（可用于修改错误回退）<br>git merge origin/master # 合并远程master分支至当前分支<br>git cherry-pick ff44785404a8e # 合并提交ff44785404a8e的修改<br>git push origin master # 将当前分支push到远程master分支<br>git push origin :hotfixes/BJVEP933 # 删除远程仓库的hotfixes/BJVEP933分支<br>git push –tags # 把所有tag推送到远程仓库<br>git fetch # 获取所有远程分支（不更新本地分支，另需merge）<br>git fetch –prune # 获取所有原创分支并清除服务器上已删掉的分支<br>git pull origin master # 获取远程分支master并merge到当前分支<br>git mv README README2 # 重命名文件README为README2<br>git reset –hard HEAD # 将当前版本重置为HEAD（通常用于merge失败回退）<br>git rebase<br>git branch -d hotfixes/BJVEP933 # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）<br>git branch -D hotfixes/BJVEP933 # 强制删除分支hotfixes/BJVEP933<br>git ls-files # 列出git index包含的文件<br>git show-branch # 图示当前分支历史<br>git show-branch –all # 图示所有分支历史<br>git whatchanged # 显示提交历史对应的文件修改<br>git revert dfb02e6e4f2f7b573337763e5c0013802e392818 # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818<br>git ls-tree HEAD # 内部命令：显示某个git对象<br>git rev-parse v2.0 # 内部命令：显示某个ref对于的SHA1 HASH<br>git reflog # 显示所有提交，包括孤立节点<br>git show HEAD@{5}<br>git show master@{yesterday} # 显示master分支昨天的状态<br>git log –pretty=format:’%h %s’ –graph # 图示提交日志<br>git show HEAD~3<br>git show -s –pretty=raw 2be7fcb476<br>git stash # 暂存当前修改，将所有至为HEAD状态<br>git stash list # 查看所有暂存<br>git stash show -p stash@{0} # 参考第一次暂存<br>git stash apply stash@{0} # 应用第一次暂存<br>git grep “delete from” # 文件中搜索文本“delete from”<br>git grep -e ‘#define’ –and -e SORT_DIRENT<br>git gc<br>git fsck</p><h2 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h2><p>如果不想使用命令行，可以使用：<br>GitHub Desktop：<a href="https://desktop.github.com/" target="_blank" rel="noopener external nofollow noreferrer">desktop.github.com/</a> 只能提交github<br>tortoisegit：<a href="https://tortoisegit.org/" target="_blank" rel="noopener external nofollow noreferrer">tortoisegit.org/</a><br>SourceTree：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener external nofollow noreferrer">www.sourcetreeapp.com/</a></p><!-- rebuild by neat --><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora使用教程</title>
    <url>/2020/02/10/Typora%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info"><p>写Mrakdown费事？Typora让你像写Word一样行云流水，所见即所得。</p></div><img src="/2020/02/10/Typora%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/Typora.jpg" title="https://www.typora.io/"><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Typora是一款轻便简洁的Markdown编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。即时渲染使得你写Markdown就想是写Word文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p><ul><li>Typora删除了预览窗口，以及所有其他不必要的干扰。取而代之的是实时预览。</li><li>Markdown的语法因不同的解析器或编辑器而异，Typora使用的是<a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/" target="_blank" rel="noopener external nofollow noreferrer">GitHub Flavored Markdown</a>。</li></ul><h2 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h2><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</p><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul><li>加粗： <code>Ctrl + B</code></li><li>标题： <code>Ctrl + H</code></li><li>插入链接： <code>Ctrl + K</code></li><li>插入代码： <code>Ctrl + Shift + C</code> – 无法执行</li><li>行内代码： <code>Ctrl + Shift + K</code></li><li>插入图片： <code>Ctrl + Shift + I</code></li><li>无序列表：<code>Ctrl + Shift + L</code> – 无法执行</li><li>撤销： <code>Ctrl + Z</code></li><li>一级标题： <code>Ctrl + 1</code> – 以此类推<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Ctrl+1  一阶标题    Ctrl+B  字体加粗</span><br><span class="line">Ctrl+2  二阶标题    Ctrl+I  字体倾斜</span><br><span class="line">Ctrl+3  三阶标题    Ctrl+U  下划线</span><br><span class="line">Ctrl+4  四阶标题    Ctrl+Home   返回Typora顶部</span><br><span class="line">Ctrl+5  五阶标题    Ctrl+End    返回Typora底部</span><br><span class="line">Ctrl+6  六阶标题    Ctrl+T  创建表格</span><br><span class="line">Ctrl+L  选中某句话   Ctrl+K  创建超链接</span><br><span class="line">Ctrl+D  选中某个单词  Ctrl+F  搜索</span><br><span class="line">Ctrl+E  选中相同格式的文字   Ctrl+H  搜索并替换</span><br><span class="line">Alt+Shift+5 删除线 Ctrl+Shift+I    插入图片</span><br><span class="line">Ctrl+Shift+M    公式块 Ctrl+Shift+Q    引用</span><br><span class="line"></span><br><span class="line">注：一些实体符号需要在实体符号之前加”\”才能够显示</span><br></pre></td></tr></tbody></table></figure></li></ul><p>在markdown中，段落由多个空格分隔。在Typora中，只需回车即可创建新段落。</p><h3 id="标题级别"><a href="#标题级别" class="headerlink" title="标题级别"></a>标题级别</h3><p># 一级标题 快捷键为 Ctrl + 1<br>## 二级标题 快捷键为 Ctrl + 2<br>……<br>###### 六级标题 快捷键为 Ctrl + 6</p><h3 id="引用文字"><a href="#引用文字" class="headerlink" title="引用文字"></a>引用文字</h3><p>&gt; + 空格 + 引用文字</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用 * + - 都可以创建一个无序列表</p><ul><li>AAA</li><li>BBB</li><li>CCC<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3>使用 1. 2. 3. 创建有序列表</li></ul><ol><li>AAA</li><li>BBB</li><li>CCC<h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3>-[ ] 不勾选<br>-[x] 勾选<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3>在Typora中插入程序代码的方式有两种：使用反引号 `（~ 键）、使用缩进（Tab）。</li></ol><ul><li>插入行内代码，即插入一个单词或者一句代码的情况，使用 <code>code</code> 这样的形式插入。</li><li>插入多行代码输入3个反引号（`） + 回车，并在后面选择一个语言名称即可实现语法高亮。<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">helloworld</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"hello, world!"</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="数学表达式"><a href="#数学表达式" class="headerlink" title="数学表达式"></a>数学表达式</h3>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。根据需要加载 Mathjax 对数学公式进行渲染。<br>按下 <code>$$</code>，然后按下回车键，即可进行数学公式的编辑。<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf{V}<span class="emphasis">_1\times\mathbf{V}_</span>2 = \mathbf{X}_3</span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><h3 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h3>输入 <code>| 表头1 | 表头2 |</code>并回车。即可创建一个包含2列表。快捷键 <code>Ctrl + T</code>弹出对话框。<table><thead><tr><th align="center">id</th><th align="center">name</th></tr></thead><tbody><tr><td align="center">No.1</td><td align="center">胡凯</td></tr></tbody></table></li><li>不管是哪种方式，第一行为表头，第二行为分割表头和主体部分，第三行开始每一行为一个表格行</li><li>列与列之间用管道符号<code>|</code> 隔开</li><li>还可设置对齐方式(表头与内容之间)，如果不使用对齐标记，内容默认左对齐，表头居中对齐<ul><li>左对齐 ：|</li><li>右对齐 |：</li><li>中对齐 ：|：</li></ul></li><li>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 | 来标记单元格边界</li><li>为了使 Markdown 更清晰，| 和 - 两侧需要至少有一个空格（最左侧和最右侧的 | 外就不需要了）。</li></ul><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>这个例子的脚注为<a href="https://www.cnblogs.com/hider/p/11614688.html#fn1" target="_blank" rel="noopener external nofollow noreferrer">1</a>。<br>注意：该例子脚注标识是1，脚注标识可以为字母数字下划线，但是暂不支持中文。脚注内容可为任意字符，包括中文。</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>输入 <code>***</code> 或者 <code>---</code> 再按回车即可绘制一条水平线，如下：</p><hr><h3 id="目录（TOC）"><a href="#目录（TOC）" class="headerlink" title="目录（TOC）"></a>目录（TOC）</h3><p>输入 <code>[ toc ]</code> 然后回车，即可创建一个“目录”。TOC从文档中提取所有标题，其内容将自动更新。</p><blockquote><p>Typora支持TOC自动生成目录，博客园不支持？</p></blockquote><h2 id="跨度元素"><a href="#跨度元素" class="headerlink" title="跨度元素"></a>跨度元素</h2><p>跨度元素即图片，网址，视频等，在Typora中输入后，会立即载入并呈现。</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h4><p>这是一个带有标题属性的 <code>[链接](http://example.com/ "标题")</code><br>这是一个没有标题属性的 <code>[链接](http://example.net/)</code><br><a href="http://example.com/" target="_blank" rel="noopener external nofollow noreferrer">链接</a><br><a href="http://example.net/" target="_blank" rel="noopener external nofollow noreferrer">链接</a></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p>这是一个[参考链接]id – 无法执行</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><p>Typora允许用&lt;括号括起来&gt;, 把URL作为链接插入。<br>Typora还会自动链接标准网址。<br><a href="http://www.baidu.com" target="_blank" rel="noopener external nofollow noreferrer">www.baidu.com</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png "图片标题")</span><br><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png)</span><br></pre></td></tr></tbody></table></figure><p>除了以上2种方式之外，还可以直接将图片拖拽进来，自动生成链接。</p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>使用 <code>*单个星号*</code> 或者 <code>_单下划线_</code> 可以字体倾斜。快捷键 <code>Ctrl + I</code><br><em>斜体</em></p><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p>使用 <code>**两个星号**</code> 或者 <code>__两个下划线__</code> 可以字体加粗。快捷键 <code>Ctrl + B</code><br><strong>加粗</strong></p><h3 id="加粗斜体"><a href="#加粗斜体" class="headerlink" title="加粗斜体"></a>加粗斜体</h3><p>使用<code>***加粗斜体***</code>可以加粗斜体。<br><strong><em>加粗斜体\</em></strong></p><h3 id="代码标记"><a href="#代码标记" class="headerlink" title="代码标记"></a>代码标记</h3><p>标记代码使用反引号，即在英文输入法下，ESC键下面和1键左边的符号。</p><blockquote><p>使用该 <code>printf()</code>功能</p></blockquote><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用<code>~~删除线~~</code> 快捷键 <code>Alt + Shift + 5</code><br><del>删除线</del></p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>\下划线 – 无法执行<br>参考另一篇文章，可执行。<br>通过<code>下划线的内容</code> 或者 快捷键<code>Ctrl + U</code>可实现下划线<br>下划线的内容</p><h3 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h3><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。<br>:smile – 无法显示<br>😺</p><h3 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h3><p>可以使用 <code>文本</code>实现下标。<br>(需在设置中打开该功能)<br>H<del>2</del>O<br>H2O</p><h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><p>可以使用<code>文本</code>实现上标。<br>(需在设置中打开该功能)<br>X^2^<br>X2</p><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p><code>==高亮==</code>(需在设置中打开该功能)<br>==我是最重要的==</p><h3 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h3><p>使用 <code>这是要居中的内容</code>可以使文本居中<br>这是要居中的文本内容</p><h3 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h3><p>使用 <code>空格 + 空格 + Enter</code>可以实现换行，例如：<br>或者可以使用<code></code>实现换行。</p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：<br><strong>文本加粗</strong><br>** 正常显示星号 **<br>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">{}  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></tbody></table></figure><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>支持HTML<br>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<code></code>等 ，如：</p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br><span class="line">&lt;kbd&gt; &lt;/kbd&gt; -- 白色框框</span><br></pre></td></tr></tbody></table></figure><p>效果：<br>使用 Ctrl+Alt+Del 重启电脑</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>建议打开大纲视图<code>Ctrl + Shift + 1</code></li><li>插入表格需要顶格写，否则无法显示</li><li>语法无须刻意记忆，右键可查询</li></ol><!-- rebuild by neat --><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>代码神器：拒绝重复编码，这款IDEA插件了解一下</title>
    <url>/2020/02/09/easycode/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Easycode是IDEA的一个插件，可以直接对数据的表生成entity、controller、service、dao、mapper无需任何编码，简单而强大。</p><h2 id="1、安装（Easy-Code"><a href="#1、安装（Easy-Code" class="headerlink" title="1、安装（Easy Code)"></a>1、安装（Easy Code)</h2><img src="/2020/02/09/easycode/Easy_Code.jpg" title="Install Easy_Code"><a id="more"></a><p>待装好之后，推荐大家可以安装一个插件，叫做Lombok。</p><img src="/2020/02/09/easycode/Lombok.png" title="Install Lombook"><p>Lombok能通过注解的方式，在编译时自动为属性生成构造器、getter/setter、equals、hashcode、toString方法。出现的神奇就是在源码中没有getter和setter方法，但是在编译生成的字节码文件中有getter和setter方法。</p><h2 id="2、建立数据库"><a href="#2、建立数据库" class="headerlink" title="2、建立数据库"></a>2、建立数据库</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `user`;</span><br><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `username` varchar(20) DEFAULT NULL,</span><br><span class="line">  `sex` varchar(6) DEFAULT NULL,</span><br><span class="line">  `birthday` date DEFAULT NULL,</span><br><span class="line">  `address` varchar(20) DEFAULT NULL,</span><br><span class="line">  `password` varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br></pre></td></tr></tbody></table></figure><img src="/2020/02/09/easycode/Mysql.png" title="Create Database"><h2 id="3、在IDEA配置连接数据库"><a href="#3、在IDEA配置连接数据库" class="headerlink" title="3、在IDEA配置连接数据库"></a>3、在IDEA配置连接数据库</h2><p>在这之前，新建一个Springboot项目，这个应该是比较简单的。</p><p>建好SpringBoot项目之后，如下图所示，找到这个Database</p><img src="/2020/02/09/easycode/Database.png" title="This is an example image"><p>​ 然后填写数据库名字，用户名，密码。点击OK即可。这样的话，IDEA连接数据库就完事了。</p><p>​ 如果你在连接Mysql时，在地址，用户名，密码，数据库名，全配置好了，点击测试连接，咔！爆红！</p><img src="/2020/02/09/easycode/Localhost.png" title="Connection MySql"><p>这段错误信息翻译过来就是：服务器返回无效时区。进入“高级”选项卡，手动设置“serverTimezone”属性。</p><p>出现这个问题，一般原因在两个方面，第一，最基本的你Mysql驱动版本可能有问题，第二，设置mysql时区。</p><p>为什么时区会错误呢，那是因为Mysql默认的时区时UTC时区，比北京时间晚8个小时，所以我们要修改mysql的时长，首先我们先来检查下mysql的时区，前提是你安装mysql时配置好了系统环境变量。</p><p>如果你配置好了环境变量，那么就可以在命令窗口直接执行下面的命令啦！</p><p>1.进入命令窗口(Win+R),连接本地数据库 mysql -hlocalhost -uroot -p; ,回车，输入密码图：</p><p>2.继续输入 show variables like ‘%time_zone’;(注意不要漏掉后面的分号)，回车，如果现实 SYSTEM就是没有设置时区。</p><img src="/2020/02/09/easycode/CMD.png" title="Set the time zone"><p>3.现在我们来设置时区。</p><p>输入set globaltime_zone=‘+8:00’，回车，如图：</p><img src="/2020/02/09/easycode/Time_zone.png" title="Signs of success"><p>这便是设置成功啦！</p><p>这时你可以重新连接下数据库，如果成功，那么接着往下走！</p><img src="/2020/02/09/easycode/Test_Con.png" title="Reconnection"><h2 id="4-开始生成代码"><a href="#4-开始生成代码" class="headerlink" title="4.开始生成代码"></a>4.开始生成代码</h2><p>在这个你IDEA连接中找到你想生成的表，然后右键，就会出现如下所示的截图。</p><img src="/2020/02/09/easycode/Code.png" title="Reverse generated"><p>选择你要将生成的代码放入哪个文件夹中，选择完以后点击OK即可。</p><img src="/2020/02/09/easycode/Generate_Code.png" title="Select folder"><p>这样的话就完成了代码的生成了，生成的代码如下图所示：</p><img src="/2020/02/09/easycode/Coding.png" title="Select folder"><h2 id="5-pom-xml"><a href="#5-pom-xml" class="headerlink" title="5.pom.xml"></a>5.pom.xml</h2><figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--热部署--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> <span class="comment">&lt;!-- 这个需要为 true 热部署才有效 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--阿里巴巴连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="6-Application-yml"><a href="#6-Application-yml" class="headerlink" title="6.Application.yml"></a>6.Application.yml</h2><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8089</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/easycode?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*Dao.xml</span></span><br><span class="line">  <span class="attr">typeAliasesPackage:</span> <span class="string">com.easycode.demo.entity</span></span><br></pre></td></tr></tbody></table></figure><h2 id="7-启动项目"><a href="#7-启动项目" class="headerlink" title="7.启动项目"></a>7.启动项目</h2><p>在启动项目之前，我们需要修改两个地方。</p><p>在Dao层加上@Mapper注解</p><img src="/2020/02/09/easycode/Mapper.png" title="Mapper"><p>在启动类里面加上@MapperScan(“com.easycode.demo.dao”)</p><img src="/2020/02/09/easycode/Springboot.png" title="Springboot Runner"><p>启动项目 测试一下</p><p>EasyCode的用法就介绍到这里了，觉得有用的自己可以尝试一下~</p><!-- rebuild by neat --><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Easycode</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
</search>
